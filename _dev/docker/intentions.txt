UI NOTE: abstract a component, ONLY when you need it more than twice! This saves time, headche, and technical debt.

TDD NOTE: 
Write down what components are breaking often, and why, Write effective unit tests for it!

12-9-22
prune tailwind, postcss, autoprefixer deps,
export tailwindcss from shared-config,
load tw classes in shared-ui, without install tw
load tw classes in app, without installing tw
12-10-22
auto build watch command for developing in dependency packages
app, require tailwind config from shared-config
12-12-22
add icons
12-16-22
app prisma config & lib
12-20-22
users page, add memberships to user rows
complete orders page
12-21-22
tailwind config improvements, fixed theme
12-23-22
supertokens signin with managed service
12-26-22
shop, get order routes,
12-26-22
seed sample deliveries, build demo application for clients, with working mobile apps. :)
12-31-22
write prisma lib tests to check types and return from prisma funcs :)
for typescript: fix tsconfig in any projec that is having compile issue
add daisy ui for tab, modal, and more.
1-12-22
refine the ui for mobile and web
add mobile sidenav drawer:
1-18-22
fix some stuff - idk what
1-20-22
fix modals in [id].tsx pages
1-21-22
env
add node_env var to main server,
export findEnv and config shared-config, I suppose
push to vercel / linode 
1-22-22
added site setting general page, created api routes,


WILL FINISH SITE SETTINGs pages and apis

To do: 
setup nginx with https on linode
update server main url env var
Revise vercel deployment. Connect with linode server. Test for edge cases. (What are they?)
Harden security in linode, and vercel.
Add forever run script for server stops.
Message Matthew so he can review and give feedback
Profit :)

Add admin middlewares

Deploy supertokens in linode container, add to env
product upload, wasabi s3 storage, imagekit.io image handling ;D
host supertokens on linode with docker, use dockercompose

discount and pricing model:
discounts are applied on order basis, 
    applied from a product discount, if it exists,
    inherited to orderItem from product
    salePrice exist in db records: 
        OrderItem, is calculated from basePrice and discount

* build swagger api for node main server

Check the existing apps for some finished work (signup forms)
start adding all components!
migrate all mui components to tailwind

Testing:
prisma query, 
Price, formatting, mutating data, adding, removing entries,
write nextjs api route tests, to test the proper http request is sent to server. :)
unit test debounce func
Write a unit test suite for addproductshandle
Write test for updateProducts page funcs
test the correct env is loaded (dev, or production)
provision development and prod, preprod spaces

add product details page, make it resuable for consumer app

finish all admin dashboard pages, details pages, etc.
complete site settings page with data, and routes

Fix the Order totals, and add backend code to update order rows for transactions
build consumer web app (Easy!!)

auth middleware with supertokens sessions from database :)

add incremental build to shared-ui lib
tie up loose ends in the dashboard - dead code, unfinished components
cycle reusable comps to shared-ui for using consumer app :)

* organization and product lookup needs to check the users membership org on the backend, for security ocnfirmation