UI NOTE: abstract a component, ONLY when you need it more than twice! This saves time, headche, and technical debt.

TDD NOTE: 
Write down what components are breaking often, and why, Write effective unit tests for it!

12-9-22
prune tailwind, postcss, autoprefixer deps,
export tailwindcss from shared-config,
load tw classes in shared-ui, without install tw
load tw classes in app, without installing tw
12-10-22
auto build watch command for developing in dependency packages
app, require tailwind config from shared-config
12-12-22
add icons
12-16-22
app prisma config & lib
12-20-22
users page, add memberships to user rows
complete orders page
12-21-22
tailwind config improvements, fixed theme
12-23-22
supertokens signin with managed service
12-26-22
shop, get order routes,
12-26-22
seed sample deliveries, build demo application for clients, with working mobile apps. :)
12-31-22
write prisma lib tests to check types and return from prisma funcs :)
for typescript: fix tsconfig in any projec that is having compile issue
add daisy ui for tab, modal, and more.
1-12-22
refine the ui for mobile and web
add mobile sidenav drawer:
1-18-22
fix some stuff - idk what
1-20-22
fix modals in [id].tsx pages
1-21-22
root env
1-24-22
serve nextapp from linode with nginx
1-25-22
docker config to copy all monorepo files
1-27-22
docker configuration nextjs app, resolving image issues, and prisma client generation
1-29-22
switched shared-ui to rollup to resolve docker build issue, and improve ci experience
2-2-22
- shared-ui build with rollup, output css files
2-6-22
- error context component for handling down server, browser offline, and response errors,
    make use of React Error Boundary, as well as useQuery hook for components that fetch data
    for middleware, do some research, or refactor the healthcheck middleware into a built in axios function. :)
    Dont be afraid to create something messy. Clean it up later.
2-14-22
- get adress and delete address By Id work ok. updates user relation records.
2-16-22
    Fix Order > Address < User unlink the relation, so the record stays in the table.
2-17-22
    Dispensary Signup Form, 30% done
2-18-22
    Simplify component classes, signup api routes
...
2-27-22
Fix password hashing
create newSession override function - i didn't, i used express route for signup
create userSignup frontend page, api route, data function (with pw hashing), override supertokens
3-3-22
signup flow OK
get session flow OK
3-17-22
resolving docker compose file
create K8s service and deployment based from docker-compose.yml,
3-18-22
Tear down linodes to lower monthly costs. ;)
3-20-22
stripe backend
write up nextconfig to have different env vars depending on app phase, (development, test, production, staging)
resolve environment variables in next config when using docker
3-21-22
create payment server with stripe, to handle multiparty payments and customer payments, and payments to the platform.
Resolve redux


TO DO:
Test user registration flow, with data creation funcs
test stripe account creation.
test dispensarty registration flow. with data creation funcs
test stripe dispensary standard account creation.
finish writing stripe funcs.

Create checkout flow. Test.
!!Resolve, how the heck will my databases work?
mongodb is necessary for geonear processes, and changeWatch for websockets. Make it work.

Call with Lindsay Neiss at 2pm.

stripe frontend implementation. Use elements pkg for frontend, create a custom stripe implementation.
(Search for exisiting work with react, multimarketplace w stripe connect and elements)
use express account type for stripe, with custom frontned flow. tahat uses existing flow.
TEST.

move forward with deploying the k8s services. :)
Get on it!

Keep making money. Save up to go to California. Pay your bills too. Pay defi masters
Keep trading crypto and gain big dollars, little by little. :)

Connect with Zac for the next call for more help with linode, k8s or next.
Connect with a dev on codementor to complete the kubernetes install, and address any cors issues.

fasting and exercise, and SLEEP are your best friend now.

test it with lke k8s manager
save the config.
Push to remote repo.
resolve supertokens processes
create image server, using linode ob storage bucket
WIN.
Meet Ryan Blair in his home in Los Angeles, April 2023.
Show him the system, get his honest opinion. 
Ask Ryan for a $2,000,000 loan.
He may discourage it. Thats okay, do not be discouraged!

What must I do next? 3-4-2023
signin flow
production environment testing: {
    upload the latest repo
    test with supertokens, mysql containers
    write a docker compose file (or whatever kubernetes uses)
    test in the cloud,
    create hte k8s config, so I can save money in between deployments. ;)
    Message Kalifa SATURDAY to have a call on Monday.
}


TO DO
CREATE PYTHON GEOCODE SERVER, SERVE WITH NGINX SCRIPT, OR DOCKER?
TEST THE LOCAL_ORGANIZATION ROUTE, SAVE THE COORDINATES IN BOTH DB, MYSQL AND MONGO
INITIALIZE BACKUPS IN mongodb
CONNECT WITH KALIPHA TO FACILIATE THE DOCKER COMPOSE JOB
KEEP GOING. BRIDGE THE GAPS NOW.
IM DOING A GOOD JOB.

check modal use hook
// TODO update session db record with new expiry
                                // TODO delete session db record
                                
1. Test db migrate with local shadow db
why ? to have a baseline and saved database schema for recovery
why? to have a one command deployment process for scalability that WORKS
2. test linode shadow db instance in prod environemnt.
why ? to run migrations locally and in production.
Do this tomorrow. First thing in the morning.

BUILD SHOPPING EXPERIENCE APP xD
why? because the customers need an app to buy

update UI components to show session status (Layout, topbar, pages, dont couple the state)
why? because people have to know if they are signed in, be able to signin

What am I doing now?
- testing docker with mysql image, for planetscale migrate with shadowdb
why? So I can push changes to my db
why? So I can promote up to date shema to production
why? So I can host a production environment
why? So Matthew and I can demo the software to a client in MD
why? So we can get paying customers
why? Because we are launching a profitable company

create server/main route for new organizations, and new users
why? so dispensaries and users can register

make sure duplicate records are not created
why? so every use has a unique username

add search function to dispensary create to find existing vendor brands,
why? so dispensaries can be tracked under their umbrella franchise

Write test cases for signup, signin, signout route
why? to test and make sure the server is always functioning properly

create password reset, and sendpwresettoken routes
why? because users need to reset their password, so customer service is not occupied with this

configure mailserver with linode
why? to send emails to users based on user actions (reset password, verify email) to automate
Test: Mailserver with linode stmp client

get the site working for client demos.
why? to host our site, so clients can see our product live, in action

setup nginx with https on linode
why? for hosting, security

Harden security in linode
Have Matthew review and give feedback
Profit :)

-host supertokens on linode with docker, use dockercompose, k8s for container deployments
-Deploy supertokens in linode container, add to env
why? to have scalable backend services
why? because there MAY be a bottleneck with requests to supertokens
there isnt now, though.
How can we know the bottleneck in the future?
(TEST RESPOND TO AND FROM BACKEND SERVICES,
MEASURE HTTP REQUEST LATENCY WITH SOME MEASURING PACKAGE, HTTP-(MEASURE???), LOGROCKET? FOR ALL REQUESTS)


product upload, wasabi s3 storage, imagekit.io image handling ;D
Why? Because we MUST verify customer age and identification, and conduct background check for drivers and customers, dispensary employess

Add country picker to address forms, add country code
Why? UX usability

configure nextapp and nginx with docker,
- use nodebalancer

Revise dockerfile to build fast and lean
https://dev.to/jonlauridsen/exploring-the-monorepo-5-perfect-docker-52aj

discount and pricing model:
discounts are applied on order basis, 
    applied from a product discount, if it exists,
    inherited to orderItem from product
    salePrice exist in db records: 
        OrderItem, is calculated from basePrice and discount

* build swagger api for node main server

Check the existing apps for some finished work (signup forms)
start adding all components!
migrate all mui components to tailwind

Testing:
prisma query, 
Price, formatting, mutating data, adding, removing entries,
write nextjs api route tests, to test the proper http request is sent to server. :)
unit test debounce func
Write a unit test suite for addproductshandle
Write test for updateProducts page funcs
test the correct env is loaded (dev, or production)
provision development and prod, preprod spaces

add product details page, make it reusable for consumer app

finish all admin dashboard pages, details pages, etc.
complete site settings page with data, and routes

Fix the Order totals, and add backend code to update order rows for transactions
build consumer web app (Easy!!)

auth middleware with supertokens sessions from database :)

add incremental build to shared-ui lib
tie up loose ends in the dashboard - dead code, unfinished components
cycle reusable comps to shared-ui for using consumer app :)

* organization and product lookup needs to check the users membership org on the backend, for security ocnfirmation

Production fine details:
add static landing page that shows isolated from server activity, make it always available

Improve Dev Experience:
frontend: component generators, to automate file creation
, use less tailwind classes, and more components for frontend styling, { Grid, GridwithPadding, Grid gradient={}, etc}