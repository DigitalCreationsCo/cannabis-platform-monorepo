FROM node:16.16-alpine AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app
COPY . .
ARG YARN_VERSION 3.3.1
ARG TURBO_VERSION 1.6.3
RUN npm install turbo@$TURBO_VERSION --location=global
RUN yarn set version $YARN_VERSION
RUN yarn install
# RUN yarn add turbo@$TURBO_VERSION
RUN npx turbo prune --scope=@cd/shop --docker

FROM node:16.16-alpine AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/yarn.lock ./yarn.lock
ARG YARN_VERSION 3.3.1
ARG TURBO_VERSION 1.6.3
RUN npm install turbo@$TURBO_VERSION --location=global
RUN yarn set version $YARN_VERSION
RUN yarn install
COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json
# Uncomment and use build args to enable remote caching
# ARG TURBO_TEAM
# ENV TURBO_TEAM=$TURBO_TEAM
# ARG TURBO_TOKEN
# ENV TURBO_TOKEN=$TURBO_TOKEN

# tested this directory structure with build in local machine,
# works OK in local machine.
RUN npx turbo run build --filter=@cd/shop...

FROM node:16.16-alpine AS runner
WORKDIR /app
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs
# these copy commands POSSIBLY are working as intended.
COPY --from=installer /app/apps/shop/package.json .
COPY --from=installer /app/apps/shop/next.config.mjs .
COPY --from=installer --chown=nextjs:nodejs /app/apps/shop/.next/standalone ./
COPY --from=installer --chown=nextjs:nodejs /app/apps/shop/.next/static ./apps/shop/.next/static
COPY --from=installer --chown=nextjs:nodejs /app/apps/shop/public ./apps/shop/public
COPY --chown=nextjs:nodejs ./scripts ./scripts
RUN chmod 777 ./scripts/printEnv.sh
RUN ./scripts/printEnv.sh

EXPOSE 3000

# CMD ./scripts/printEnvThenStartApp.sh shop
CMD node apps/shop/server.js