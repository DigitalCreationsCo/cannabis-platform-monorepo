/*! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com*/
*,
:after,
:before {
	border: 0 solid #14a33d;
	box-sizing: border-box;
}
:after,
:before {
	--tw-content: '';
}
html {
	-webkit-text-size-adjust: 100%;
	font-feature-settings: normal;
	font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
		Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif,
		Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
	font-variation-settings: normal;
	line-height: 1.5;
	tab-size: 4;
}
body {
	line-height: inherit;
	margin: 0;
}
hr {
	border-top-width: 1px;
	color: inherit;
	height: 0;
}
abbr:where([title]) {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}
a {
	color: inherit;
	text-decoration: inherit;
}
b,
strong {
	font-weight: bolder;
}
code,
kbd,
pre,
samp {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
		Liberation Mono, Courier New, monospace;
	font-size: 1em;
}
small {
	font-size: 80%;
}
sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}
sub {
	bottom: -0.25em;
}
sup {
	top: -0.5em;
}
table {
	border-collapse: collapse;
	border-color: inherit;
	text-indent: 0;
}
button,
input,
optgroup,
select,
textarea {
	color: inherit;
	font-family: inherit;
	font-size: 100%;
	font-weight: inherit;
	line-height: inherit;
	margin: 0;
	padding: 0;
}
button,
select {
	text-transform: none;
}
[type='button'],
[type='reset'],
[type='submit'],
button {
	-webkit-appearance: button;
	background-color: transparent;
	background-image: none;
}
:-moz-focusring {
	outline: auto;
}
:-moz-ui-invalid {
	box-shadow: none;
}
progress {
	vertical-align: baseline;
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}
[type='search'] {
	-webkit-appearance: textfield;
	outline-offset: -2px;
}
::-webkit-search-decoration {
	-webkit-appearance: none;
}
::-webkit-file-upload-button {
	-webkit-appearance: button;
	font: inherit;
}
summary {
	display: list-item;
}
blockquote,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
p,
pre {
	margin: 0;
}
fieldset {
	margin: 0;
}
fieldset,
legend {
	padding: 0;
}
menu,
ol,
ul {
	list-style: none;
	margin: 0;
	padding: 0;
}
textarea {
	resize: vertical;
}
input::placeholder,
textarea::placeholder {
	color: #9ca3af;
	opacity: 1;
}
[role='button'],
button {
	cursor: pointer;
}
:disabled {
	cursor: default;
}
audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
	display: block;
	vertical-align: middle;
}
img,
video {
	height: auto;
	max-width: 100%;
}
[hidden] {
	display: none;
}
:root,
[data-theme] {
	background-color: hsla(var(--b1) / var(--tw-bg-opacity, 1));
	color: hsla(var(--bc) / var(--tw-text-opacity, 1));
}
html {
	-webkit-tap-highlight-color: transparent;
}
:root {
	--primary: #14a33d;
	--pf: 0 0% 0%;
	--sf: 0 0% 0%;
	--af: 0 0% 0%;
	--nf: 0 0% 0%;
	--b1: 0 0% 100%;
	--b2: 0 0% 0%;
	--b3: 0 0% 0%;
	--in: 198 93% 60%;
	--su: 158 64% 52%;
	--wa: 43 96% 56%;
	--er: 0 91% 71%;
	--bc: 0 0% 80%;
	--pc: 0 0% 80%;
	--sc: 0 0% 80%;
	--ac: 0 0% 80%;
	--nc: 0 0% 80%;
	--inc: 198 100% 12%;
	--suc: 158 100% 10%;
	--wac: 43 100% 11%;
	--erc: 0 100% 14%;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-text-case: uppercase;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--primary-light: #17c649;
	--secondary: #13622a;
	--secondary-light: #4bbe6e;
	--inverse: #fff2da;
	--inverse-soft: #f9f7f2;
	--accent: #a49b8a;
	--accent-soft: #bbb5a9;
	--dark: #3e3a3a;
	--dark-soft: #a8a8a8;
	--light: #fff;
	--light-soft: #c6c0b5;
	--error: #dd1616;
	--yellow: #fff244;
}
*,
:after,
:before {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(59, 130, 246, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
}
::-webkit-backdrop {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(59, 130, 246, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
}
::backdrop {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(59, 130, 246, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
}
.container {
	width: 100%;
}
@media (min-width: 640px) {
	.container {
		max-width: 640px;
	}
}
@media (min-width: 768px) {
	.container {
		max-width: 768px;
	}
}
@media (min-width: 1024px) {
	.container {
		max-width: 1024px;
	}
}
@media (min-width: 1280px) {
	.container {
		max-width: 1280px;
	}
}
@media (min-width: 1536px) {
	.container {
		max-width: 1536px;
	}
}
.avatar.placeholder > div {
	align-items: center;
	display: flex;
	justify-content: center;
}
.badge {
	border-color: hsl(var(--n) / var(--tw-border-opacity));
	border-radius: var(--rounded-badge, 1.9rem);
	border-width: 1px;
	height: 1.25rem;
	padding-left: 0.563rem;
	padding-right: 0.563rem;
	width: -webkit-fit-content;
	width: -moz-fit-content;
	width: fit-content;
}
.badge,
.btn {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	align-items: center;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	color: hsl(var(--nc) / var(--tw-text-opacity));
	display: inline-flex;
	font-size: 0.875rem;
	justify-content: center;
	line-height: 1.25rem;
	transition-duration: 0.2s;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.btn {
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
	border-color: transparent;
	border-color: hsl(var(--n) / var(--tw-border-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: var(--border-btn, 1px);
	cursor: pointer;
	flex-shrink: 0;
	flex-wrap: wrap;
	font-weight: 600;
	height: 3rem;
	line-height: 1em;
	min-height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	text-align: center;
	text-decoration-line: none;
	text-transform: uppercase;
	text-transform: var(--btn-text-case, uppercase);
	-webkit-user-select: none;
	user-select: none;
}
.btn-disabled,
.btn.loading,
.btn.loading:hover,
.btn[disabled] {
	pointer-events: none;
}
.btn.\!loading,
.btn.\!loading:hover {
	pointer-events: none !important;
}
.btn.loading:before {
	animation: spin 2s linear infinite;
	border-color: transparent currentColor currentColor transparent;
	border-radius: 9999px;
	border-width: 2px;
	content: '';
	height: 1rem;
	margin-right: 0.5rem;
	width: 1rem;
}
.btn.\!loading:before {
	animation: spin 2s linear infinite !important;
	border-color: transparent currentColor currentColor transparent !important;
	border-radius: 9999px !important;
	border-width: 2px !important;
	content: '' !important;
	height: 1rem !important;
	margin-right: 0.5rem !important;
	width: 1rem !important;
}
@media (prefers-reduced-motion: reduce) {
	.btn.loading:before {
		animation: spin 10s linear infinite;
	}
	.btn.\!loading:before {
		animation: spin 10s linear infinite !important;
	}
}
@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(1turn);
	}
}
.btn-group > input[type='radio'].btn {
	-webkit-appearance: none;
	appearance: none;
}
.btn-group > input[type='radio'].btn:before {
	content: attr(data-title);
}
.card {
	border-radius: var(--rounded-box, 1rem);
	display: flex;
	flex-direction: column;
	position: relative;
}
.card:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.card figure {
	align-items: center;
	display: flex;
	justify-content: center;
}
.card.image-full {
	display: grid;
}
.card.image-full:before {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	border-radius: var(--rounded-box, 1rem);
	content: '';
	opacity: 0.75;
	position: relative;
	z-index: 10;
}
.card.image-full:before,
.card.image-full > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.card.image-full > figure img {
	height: 100%;
	object-fit: cover;
}
.card.image-full > .card-body {
	--tw-text-opacity: 1;
	color: hsl(var(--nc) / var(--tw-text-opacity));
	position: relative;
	z-index: 20;
}
.carousel-item {
	box-sizing: content-box;
	display: flex;
	flex: none;
	scroll-snap-align: start;
}
.carousel-center .carousel-item {
	scroll-snap-align: center;
}
.carousel-end .carousel-item {
	scroll-snap-align: end;
}
.checkbox {
	--chkbg: var(--bc);
	--chkfg: var(--b1);
	--tw-border-opacity: 0.2;
	-webkit-appearance: none;
	appearance: none;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	cursor: pointer;
	flex-shrink: 0;
	height: 1.5rem;
	width: 1.5rem;
}
.divider {
	align-items: center;
	align-self: stretch;
	display: flex;
	flex-direction: row;
	height: 1rem;
	margin-bottom: 1rem;
	margin-top: 1rem;
	white-space: nowrap;
}
.divider:after,
.divider:before {
	content: '';
	flex-grow: 1;
	height: 0.125rem;
	width: 100%;
}
.drawer {
	display: grid;
	height: 100vh;
	height: 100dvh;
	overflow: hidden;
	width: 100%;
}
.drawer.drawer-end {
	direction: rtl;
}
.drawer.drawer-end > * {
	direction: ltr;
}
.drawer.drawer-end > .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 100%;
	justify-self: end;
}
.drawer.drawer-end
	> .drawer-toggle:checked
	~ .drawer-side
	> .drawer-overlay
	+ *,
.drawer.drawer-end > .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.drawer.drawer-end
	> .drawer-toggle:checked
	~ .drawer-side
	> .drawer-overlay
	+ * {
	--tw-translate-x: 0px;
}
:where(.drawer-toggle ~ .drawer-content) {
	height: inherit;
}
.drawer-toggle {
	-webkit-appearance: none;
	appearance: none;
	height: 0;
	opacity: 0;
	position: absolute;
	width: 0;
}
.drawer-toggle ~ .drawer-content {
	grid-column-start: 1;
	grid-row-start: 1;
	overflow-y: auto;
	transition-duration: 0.3s;
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	z-index: 0;
}
.drawer-toggle ~ .drawer-side {
	display: grid;
	grid-column-start: 1;
	grid-row-start: 1;
	max-height: 100vh;
	overflow-x: hidden;
}
.drawer-toggle ~ .drawer-side > .drawer-overlay {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
	cursor: pointer;
	opacity: 0;
	visibility: hidden;
}
.drawer-toggle ~ .drawer-side > .drawer-overlay,
.drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	grid-column-start: 1;
	grid-row-start: 1;
	transition-duration: 0.3s;
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: -100%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	z-index: 10;
}
.drawer-toggle:checked ~ .drawer-side {
	isolation: isolate;
	overflow-x: hidden;
	overflow-y: auto;
}
.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
	--tw-bg-opacity: 0.4;
	opacity: 0.999999;
	visibility: visible;
}
.drawer-toggle:checked ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 0px;
}
.drawer-toggle:checked ~ .drawer-side > .drawer-overlay + *,
[dir='rtl'] .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
[dir='rtl'] .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 100%;
}
[dir='rtl'] .drawer-toggle:checked ~ .drawer-side > .drawer-overlay + * {
	--tw-translate-x: 0px;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
[dir='rtl']
	.drawer.drawer-end
	> .drawer-toggle
	~ .drawer-side
	> .drawer-overlay
	+ * {
	--tw-translate-x: -100%;
}
[dir='rtl']
	.drawer.drawer-end
	> .drawer-toggle:checked
	~ .drawer-side
	> .drawer-overlay
	+ * {
	--tw-translate-x: 0px;
}
[dir='rtl'] .drawer.drawer-end > .drawer-toggle:checked ~ .drawer-content {
	--tw-translate-x: 0.5rem;
}
@media (min-width: 1024px) {
	.drawer-mobile {
		grid-auto-columns: -webkit-max-content auto;
		grid-auto-columns: max-content auto;
	}
	.drawer-mobile > .drawer-toggle ~ .drawer-content {
		height: auto;
	}
	@media (min-width: 1024px) {
		.drawer-mobile > .drawer-toggle ~ .drawer-content {
			grid-column-start: 2;
		}
		.drawer-mobile > .drawer-toggle ~ .drawer-side > .drawer-overlay {
			visibility: visible;
		}
		.drawer-mobile > .drawer-toggle ~ .drawer-side > .drawer-overlay + * {
			--tw-translate-x: 0px;
			transform: translate(var(--tw-translate-x), var(--tw-translate-y))
				rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
				scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
		}
		.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-content {
			grid-column-start: 1;
		}
		.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-side {
			grid-column-start: 2;
		}
		.drawer-mobile.drawer-end
			> .drawer-toggle
			~ .drawer-side
			> .drawer-overlay {
			visibility: visible;
		}
		.drawer-mobile.drawer-end
			> .drawer-toggle
			~ .drawer-side
			> .drawer-overlay
			+ * {
			--tw-translate-x: 0px;
			transform: translate(var(--tw-translate-x), var(--tw-translate-y))
				rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
				scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
		}
	}
	.drawer-mobile > .drawer-toggle ~ .drawer-side {
		overflow-y: auto;
	}
	.drawer-mobile.drawer-end {
		direction: ltr;
		grid-auto-columns: auto -webkit-max-content;
		grid-auto-columns: auto max-content;
	}
	.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-content {
		height: auto;
	}
	.drawer-mobile.drawer-end > .drawer-toggle ~ .drawer-side {
		overflow-y: auto;
	}
	.drawer-mobile > .drawer-toggle:checked ~ .drawer-content {
		--tw-translate-x: 0px;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y))
			rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
			scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	}
}
.dropdown {
	display: inline-block;
	position: relative;
}
.dropdown > :focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.dropdown .dropdown-content {
	--tw-scale-x: 0.95;
	--tw-scale-y: 0.95;
	opacity: 0;
	position: absolute;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	transform-origin: top;
	transition-duration: 0.2s;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	visibility: hidden;
	z-index: 50;
}
.dropdown-end .dropdown-content {
	right: 0;
}
.dropdown-left .dropdown-content {
	bottom: auto;
	right: 100%;
	top: 0;
	transform-origin: right;
}
.dropdown-right .dropdown-content {
	bottom: auto;
	left: 100%;
	top: 0;
	transform-origin: left;
}
.dropdown-bottom .dropdown-content {
	bottom: auto;
	top: 100%;
	transform-origin: top;
}
.dropdown-top .dropdown-content {
	bottom: 100%;
	top: auto;
	transform-origin: bottom;
}
.dropdown-end.dropdown-left .dropdown-content,
.dropdown-end.dropdown-right .dropdown-content {
	bottom: 0;
	top: auto;
}
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown.dropdown-open .dropdown-content,
.dropdown:not(.dropdown-hover):focus .dropdown-content,
.dropdown:not(.dropdown-hover):focus-within .dropdown-content {
	opacity: 1;
	visibility: visible;
}
.footer {
	column-gap: 1rem;
	font-size: 0.875rem;
	grid-auto-flow: row;
	line-height: 1.25rem;
	row-gap: 2.5rem;
	width: 100%;
}
.footer,
.footer > * {
	display: grid;
	place-items: start;
}
.footer > * {
	gap: 0.5rem;
}
@media (min-width: 48rem) {
	.footer {
		grid-auto-flow: column;
	}
	.footer-center {
		grid-auto-flow: row dense;
	}
}
.label {
	align-items: center;
	display: flex;
	justify-content: space-between;
	padding: 0.5rem 0.25rem;
	-webkit-user-select: none;
	user-select: none;
}
.indicator {
	display: inline-flex;
	position: relative;
	width: -webkit-max-content;
	width: max-content;
}
.indicator :where(.indicator-item) {
	position: absolute;
	white-space: nowrap;
	z-index: 1;
}
.input {
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	flex-shrink: 1;
	font-size: 1rem;
	height: 3rem;
	line-height: 2;
	line-height: 1.5rem;
	padding-left: 1rem;
	padding-right: 1rem;
}
.input-group > .input {
	isolation: isolate;
}
.input-group > *,
.input-group > .input,
.input-group > .select,
.input-group > .textarea {
	border-radius: 0;
}
.menu {
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
}
.menu.horizontal {
	display: inline-flex;
	flex-direction: row;
}
.menu.horizontal :where(li) {
	flex-direction: row;
}
:where(.menu li) {
	align-items: stretch;
	display: flex;
	flex-direction: column;
	flex-shrink: 0;
	flex-wrap: wrap;
	position: relative;
}
.menu :where(li:not(.menu-title)) > :where(:not(ul)) {
	display: flex;
}
.menu :where(li:not(.disabled):not(.menu-title)) > :where(:not(ul)) {
	align-items: center;
	cursor: pointer;
	outline: 2px solid transparent;
	outline-offset: 2px;
	-webkit-user-select: none;
	user-select: none;
}
.menu > :where(li > :not(ul):focus) {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.menu > :where(li.disabled > :not(ul):focus) {
	cursor: auto;
}
.menu > :where(li.\!disabled > :not(ul):focus) {
	cursor: auto !important;
}
.menu > :where(li) :where(ul) {
	align-items: stretch;
	display: flex;
	flex-direction: column;
}
.menu > :where(li) > :where(ul) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
	display: none;
	left: 100%;
	position: absolute;
	top: auto;
}
.menu > :where(li:hover) > :where(ul) {
	display: flex;
}
.menu > :where(li:focus) > :where(ul) {
	display: flex;
}
.modal {
	--tw-bg-opacity: 0.4;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
	display: flex;
	inset: 0;
	justify-content: center;
	opacity: 0;
	overflow-y: hidden;
	overscroll-behavior: contain;
	pointer-events: none;
	position: fixed;
	transition-duration: 0.2s;
	transition-property: transform, opacity, visibility;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	visibility: hidden;
	z-index: 999;
}
:where(.modal) {
	align-items: center;
}
.modal-box {
	--tw-bg-opacity: 1;
	--tw-scale-x: 0.9;
	--tw-scale-y: 0.9;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	border-bottom-left-radius: var(--rounded-box, 1rem);
	border-bottom-right-radius: var(--rounded-box, 1rem);
	border-top-left-radius: var(--rounded-box, 1rem);
	border-top-right-radius: var(--rounded-box, 1rem);
	box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
	max-height: calc(100vh - 5em);
	max-width: 32rem;
	overflow-y: auto;
	overscroll-behavior: contain;
	padding: 1.5rem;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	transition-duration: 0.2s;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	width: 91.666667%;
}
.modal-open,
.modal-toggle:checked + .modal,
.modal:target {
	opacity: 1;
	pointer-events: auto;
	visibility: visible;
}
.rating {
	display: inline-flex;
	position: relative;
}
.rating :where(input) {
	--tw-bg-opacity: 1;
	animation: rating-pop var(--animation-input, 0.25s) ease-out;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	border-radius: 0;
	cursor: pointer;
	height: 1.5rem;
	width: 1.5rem;
}
.select {
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	-webkit-appearance: none;
	appearance: none;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
	background-image: linear-gradient(45deg, transparent 50%, currentColor 0),
		linear-gradient(135deg, currentColor 50%, transparent 0);
	background-position: calc(100% - 20px) calc(1px + 50%),
		calc(100% - 16px) calc(1px + 50%);
	background-repeat: no-repeat;
	background-size: 4px 4px, 4px 4px;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	cursor: pointer;
	display: inline-flex;
	flex-shrink: 0;
	font-size: 0.875rem;
	font-weight: 600;
	height: 3rem;
	line-height: 1.25rem;
	line-height: 2;
	min-height: 3rem;
	padding-left: 1rem;
	padding-right: 2.5rem;
	-webkit-user-select: none;
	user-select: none;
}
.select[multiple] {
	height: auto;
}
.steps .step {
	display: grid;
	grid-template-columns: repeat(1, minmax(0, 1fr));
	grid-template-columns: auto;
	grid-template-rows: repeat(2, minmax(0, 1fr));
	grid-template-rows: 40px 1fr;
	min-width: 4rem;
	place-items: center;
	text-align: center;
}
.table {
	position: relative;
	text-align: left;
}
.table th:first-child {
	left: 0;
	position: -webkit-sticky;
	position: sticky;
	z-index: 11;
}
.toast {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	min-width: -webkit-fit-content;
	min-width: -moz-fit-content;
	min-width: fit-content;
	padding: 1rem;
	position: fixed;
}
.toggle {
	--tglbg: hsl(var(--b1));
	--handleoffset: 1.5rem;
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
	--togglehandleborder: 0 0;
	--tw-border-opacity: 0.2;
	--tw-bg-opacity: 0.5;
	-webkit-appearance: none;
	appearance: none;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	border-radius: var(--rounded-badge, 1.9rem);
	border-width: 1px;
	box-shadow: var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset, var(--togglehandleborder);
	cursor: pointer;
	flex-shrink: 0;
	height: 1.5rem;
	transition-duration: 0.3s;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition: background, box-shadow var(--animation-input, 0.2s) ease-in-out;
	width: 3rem;
}
.badge-primary {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.badge-outline.badge-primary {
	--tw-text-opacity: 1;
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline .badge {
	--tw-border-opacity: 1;
	--tw-text-opacity: 1;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-outline.btn-primary .badge {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary .badge {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--s) / var(--tw-bg-opacity));
	border-color: hsl(var(--s) / var(--tw-border-opacity));
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-accent .badge {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--a) / var(--tw-bg-opacity));
	border-color: hsl(var(--a) / var(--tw-border-opacity));
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btn-outline .badge.outline {
	--tw-border-opacity: 1;
	background-color: transparent;
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
}
.btn-outline:hover .badge {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.btn-outline:hover .badge.outline {
	--tw-border-opacity: 1;
	--tw-text-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	color: hsl(var(--nc) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .badge {
	background-color: hsl(var(--pc) / var(--tw-bg-opacity));
	color: hsl(var(--p) / var(--tw-text-opacity));
}
.btn-outline.btn-primary:hover .badge,
.btn-outline.btn-primary:hover .badge.outline {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	border-color: hsl(var(--pc) / var(--tw-border-opacity));
}
.btn-outline.btn-primary:hover .badge.outline {
	background-color: hsl(var(--pf, var(--p)) / var(--tw-bg-opacity));
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover .badge {
	background-color: hsl(var(--sc) / var(--tw-bg-opacity));
	color: hsl(var(--s) / var(--tw-text-opacity));
}
.btn-outline.btn-secondary:hover .badge,
.btn-outline.btn-secondary:hover .badge.outline {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	border-color: hsl(var(--sc) / var(--tw-border-opacity));
}
.btn-outline.btn-secondary:hover .badge.outline {
	background-color: hsl(var(--sf, var(--s)) / var(--tw-bg-opacity));
	color: hsl(var(--sc) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover .badge {
	background-color: hsl(var(--ac) / var(--tw-bg-opacity));
	color: hsl(var(--a) / var(--tw-text-opacity));
}
.btn-outline.btn-accent:hover .badge,
.btn-outline.btn-accent:hover .badge.outline {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	border-color: hsl(var(--ac) / var(--tw-border-opacity));
}
.btn-outline.btn-accent:hover .badge.outline {
	background-color: hsl(var(--af, var(--a)) / var(--tw-bg-opacity));
	color: hsl(var(--ac) / var(--tw-text-opacity));
}
.btm-nav > .disabled,
.btm-nav > .disabled:hover,
.btm-nav > [disabled],
.btm-nav > [disabled]:hover {
	--tw-border-opacity: 0;
	--tw-bg-opacity: 0.1;
	--tw-text-opacity: 0.2;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	color: hsl(var(--bc) / var(--tw-text-opacity));
	pointer-events: none;
}
.btm-nav > .\!disabled,
.btm-nav > .\!disabled:hover {
	--tw-border-opacity: 0 !important;
	--tw-bg-opacity: 0.1 !important;
	--tw-text-opacity: 0.2 !important;
	background-color: hsl(var(--n) / var(--tw-bg-opacity)) !important;
	color: hsl(var(--bc) / var(--tw-text-opacity)) !important;
	pointer-events: none !important;
}
.btm-nav > * .label {
	font-size: 1rem;
	line-height: 1.5rem;
}
.btn:active:focus,
.btn:active:hover {
	animation: none;
	transform: scale(var(--btn-focus-scale, 0.95));
}
.btn-active,
.btn:hover {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	background-color: hsl(var(--nf, var(--n)) / var(--tw-bg-opacity));
	border-color: hsl(var(--nf, var(--n)) / var(--tw-border-opacity));
}
.btn:focus-visible {
	outline: 2px solid hsl(var(--nf));
	outline-offset: 2px;
}
.btn.glass.btn-active,
.btn.glass:hover {
	--glass-opacity: 25%;
	--glass-border-opacity: 15%;
}
.btn.glass:focus-visible {
	outline: 2px solid currentColor;
}
.btn-ghost {
	background-color: transparent;
	border-color: transparent;
	border-width: 1px;
	color: currentColor;
}
.btn-ghost.btn-active,
.btn-ghost:hover {
	--tw-border-opacity: 0;
	--tw-bg-opacity: 0.2;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
}
.btn-ghost:focus-visible {
	outline: 2px solid currentColor;
}
.btn-disabled,
.btn-disabled:hover,
.btn[disabled],
.btn[disabled]:hover {
	--tw-border-opacity: 0;
	--tw-bg-opacity: 0.2;
	--tw-text-opacity: 0.2;
	background-color: hsl(var(--n) / var(--tw-bg-opacity));
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.btn.loading.btn-circle:before,
.btn.loading.btn-square:before {
	margin-right: 0;
}
.btn.\!loading.btn-circle:before,
.btn.\!loading.btn-square:before {
	margin-right: 0 !important;
}
.btn.loading.btn-lg:before,
.btn.loading.btn-xl:before {
	height: 1.25rem;
	width: 1.25rem;
}
.btn.\!loading.btn-lg:before,
.btn.\!loading.btn-xl:before {
	height: 1.25rem !important;
	width: 1.25rem !important;
}
.btn.loading.btn-sm:before,
.btn.loading.btn-xs:before {
	height: 0.75rem;
	width: 0.75rem;
}
.btn.\!loading.btn-sm:before,
.btn.\!loading.btn-xs:before {
	height: 0.75rem !important;
	width: 0.75rem !important;
}
.btn-group > .btn-active,
.btn-group > input[type='radio']:checked.btn {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.btn-group > .btn-active:focus-visible,
.btn-group > input[type='radio']:checked.btn:focus-visible {
	outline: 2px solid hsl(var(--p));
}
@keyframes button-pop {
	0% {
		transform: scale(var(--btn-focus-scale, 0.95));
	}
	40% {
		transform: scale(1.02);
	}
	to {
		transform: scale(1);
	}
}
.card :where(figure:first-child) {
	border-end-end-radius: unset;
	border-end-start-radius: unset;
	border-start-end-radius: inherit;
	border-start-start-radius: inherit;
	overflow: hidden;
}
.card :where(figure:last-child) {
	border-end-end-radius: inherit;
	border-end-start-radius: inherit;
	border-start-end-radius: unset;
	border-start-start-radius: unset;
	overflow: hidden;
}
.card:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.card.bordered {
	--tw-border-opacity: 1;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	border-width: 1px;
}
.card.compact .card-body {
	font-size: 0.875rem;
	line-height: 1.25rem;
	padding: 1rem;
}
.card.image-full :where(figure) {
	border-radius: inherit;
	overflow: hidden;
}
.checkbox:focus-visible {
	outline: 2px solid hsl(var(--bc));
	outline-offset: 2px;
}
.checkbox:checked,
.checkbox[aria-checked='true'],
.checkbox[checked='true'] {
	--tw-bg-opacity: 1;
	animation: checkmark var(--animation-input, 0.2s) ease-in-out;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	background-image: linear-gradient(
			-45deg,
			transparent 65%,
			hsl(var(--chkbg)) 65.99%
		),
		linear-gradient(45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
		linear-gradient(-45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
		linear-gradient(
			45deg,
			hsl(var(--chkbg)) 30%,
			hsl(var(--chkfg)) 30.99%,
			hsl(var(--chkfg)) 40%,
			transparent 40.99%
		),
		linear-gradient(-45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
	background-repeat: no-repeat;
}
.checkbox:indeterminate {
	--tw-bg-opacity: 1;
	animation: checkmark var(--animation-input, 0.2s) ease-in-out;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	background-image: linear-gradient(
			90deg,
			transparent 80%,
			hsl(var(--chkbg)) 80%
		),
		linear-gradient(-90deg, transparent 80%, hsl(var(--chkbg)) 80%),
		linear-gradient(
			0deg,
			hsl(var(--chkbg)) 43%,
			hsl(var(--chkfg)) 43%,
			hsl(var(--chkfg)) 57%,
			hsl(var(--chkbg)) 57%
		);
	background-repeat: no-repeat;
}
.checkbox:disabled {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	border-color: transparent;
	cursor: not-allowed;
	opacity: 0.2;
}
@keyframes checkmark {
	0% {
		background-position-y: 5px;
	}
	50% {
		background-position-y: -2px;
	}
	to {
		background-position-y: 0;
	}
}
[dir='rtl'] .checkbox:checked,
[dir='rtl'] .checkbox[aria-checked='true'],
[dir='rtl'] .checkbox[checked='true'] {
	background-image: linear-gradient(
			45deg,
			transparent 65%,
			hsl(var(--chkbg)) 65.99%
		),
		linear-gradient(-45deg, transparent 75%, hsl(var(--chkbg)) 75.99%),
		linear-gradient(45deg, hsl(var(--chkbg)) 40%, transparent 40.99%),
		linear-gradient(
			-45deg,
			hsl(var(--chkbg)) 30%,
			hsl(var(--chkfg)) 30.99%,
			hsl(var(--chkfg)) 40%,
			transparent 40.99%
		),
		linear-gradient(45deg, hsl(var(--chkfg)) 50%, hsl(var(--chkbg)) 50.99%);
}
.divider:after,
.divider:before {
	--tw-bg-opacity: 0.1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
}
.divider:not(:empty) {
	gap: 1rem;
}
.drawer.drawer-end > .drawer-toggle:checked ~ .drawer-content {
	--tw-translate-x: -0.5rem;
}
.drawer-toggle:checked ~ .drawer-content,
.drawer.drawer-end > .drawer-toggle:checked ~ .drawer-content {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.drawer-toggle:checked ~ .drawer-content {
	--tw-translate-x: 0.5rem;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button {
	outline: 2px solid hsl(var(--nf));
	outline-offset: 2px;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-primary {
	outline: 2px solid hsl(var(--p));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-secondary {
	outline: 2px solid hsl(var(--s));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-accent {
	outline: 2px solid hsl(var(--a));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-info {
	outline: 2px solid hsl(var(--in));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-success {
	outline: 2px solid hsl(var(--su));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-warning {
	outline: 2px solid hsl(var(--wa));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-error {
	outline: 2px solid hsl(var(--er));
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.glass {
	outline: 2px solid currentColor;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-ghost {
	outline: 2px solid currentColor;
}
.drawer-toggle:focus-visible ~ .drawer-content .drawer-button.btn-link {
	outline: 2px solid currentColor;
}
.dropdown.dropdown-hover:hover .dropdown-content,
.dropdown.dropdown-open .dropdown-content,
.dropdown:focus .dropdown-content,
.dropdown:focus-within .dropdown-content {
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.label a:hover {
	--tw-text-opacity: 1;
	color: hsl(var(--bc) / var(--tw-text-opacity));
}
.input[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}
.input:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}
.input-error {
	--tw-border-opacity: 1;
	border-color: hsl(var(--er) / var(--tw-border-opacity));
}
.input-error:focus {
	outline: 2px solid hsl(var(--er));
}
.input-disabled,
.input[disabled] {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 0.2;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	cursor: not-allowed;
}
.input-disabled::placeholder,
.input[disabled]::placeholder {
	--tw-placeholder-opacity: 0.2;
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
}
.menu.horizontal > li.bordered > a,
.menu.horizontal > li.bordered > button,
.menu.horizontal > li.bordered > span {
	--tw-border-opacity: 1;
	border-bottom-width: 4px;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	border-left-width: 0;
}
.menu[class*=' p-']:not(.menu[class*=' p-0']) li > *,
.menu[class*=' px-']:not(.menu[class*=' px-0']) li > *,
.menu[class^='p-']:not(.menu[class^='p-0']) li > *,
.menu[class^='px-']:not(.menu[class^='px-0']) li > * {
	border-radius: var(--rounded-btn, 0.5rem);
}
.menu :where(li.bordered > *) {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
	border-left-width: 4px;
}
.menu :where(li) > :where(:not(ul)) {
	color: currentColor;
	gap: 0.75rem;
	padding: 0.75rem 1rem;
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul):focus),
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul):hover) {
	--tw-bg-opacity: 0.1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
}
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul).active),
.menu :where(li:not(.menu-title):not(:empty)) > :where(:not(ul):active) {
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--p) / var(--tw-bg-opacity));
	color: hsl(var(--pc) / var(--tw-text-opacity));
}
.menu :where(li:empty) {
	--tw-bg-opacity: 0.1;
	background-color: hsl(var(--bc) / var(--tw-bg-opacity));
	height: 1px;
	margin: 0.5rem 1rem;
}
.menu li.disabled > * {
	--tw-text-opacity: 0.2;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	-webkit-user-select: none;
	user-select: none;
}
.menu li.\!disabled > * {
	--tw-text-opacity: 0.2 !important;
	color: hsl(var(--bc) / var(--tw-text-opacity)) !important;
	-webkit-user-select: none !important;
	user-select: none !important;
}
.menu li.disabled > :hover {
	background-color: transparent;
}
.menu li.\!disabled > :hover {
	background-color: transparent !important;
}
.menu li.hover-bordered a {
	border-color: transparent;
	border-left-width: 4px;
}
.menu li.hover-bordered a:hover {
	--tw-border-opacity: 1;
	border-color: hsl(var(--p) / var(--tw-border-opacity));
}
.menu.compact li > a,
.menu.compact li > span {
	font-size: 0.875rem;
	line-height: 1.25rem;
	padding-bottom: 0.5rem;
	padding-top: 0.5rem;
}
.menu .menu-title {
	font-size: 0.75rem;
	font-weight: 700;
	line-height: 1rem;
	opacity: 0.4;
}
.menu .menu-title > * {
	padding-bottom: 0.25rem;
	padding-top: 0.25rem;
}
.menu :where(li:not(.disabled)) > :where(:not(ul)) {
	outline: 2px solid transparent;
	outline-offset: 2px;
	transition-duration: 0.2s;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.menu > :where(li:first-child) {
	border-bottom-left-radius: unset;
	border-bottom-right-radius: unset;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.menu > :where(li:first-child) > :where(:not(ul)) {
	border-bottom-left-radius: unset;
	border-bottom-right-radius: unset;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.menu > :where(li:last-child) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: unset;
	border-top-right-radius: unset;
}
.menu > :where(li:last-child) > :where(:not(ul)) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: unset;
	border-top-right-radius: unset;
}
.menu > :where(li:first-child:last-child) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.menu > :where(li:first-child:last-child) > :where(:not(ul)) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.menu > :where(li) > :where(ul) :where(li) {
	white-space: nowrap;
	width: 100%;
}
.menu > :where(li) > :where(ul) :where(li) :where(ul) {
	padding-left: 1rem;
}
.menu > :where(li) > :where(ul) :where(li) > :where(:not(ul)) {
	white-space: nowrap;
	width: 100%;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) {
	border-bottom-left-radius: unset;
	border-bottom-right-radius: unset;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.menu > :where(li) > :where(ul) > :where(li:first-child) > :where(:not(ul)) {
	border-bottom-left-radius: unset;
	border-bottom-right-radius: unset;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: unset;
	border-top-right-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:last-child) > :where(:not(ul)) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: unset;
	border-top-right-radius: unset;
}
.menu > :where(li) > :where(ul) > :where(li:first-child:last-child) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.menu
	> :where(li)
	> :where(ul)
	> :where(li:first-child:last-child)
	> :where(:not(ul)) {
	border-bottom-left-radius: inherit;
	border-bottom-right-radius: inherit;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}
.modal-open .modal-box,
.modal-toggle:checked + .modal .modal-box,
.modal:target .modal-box {
	--tw-translate-y: 0px;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes progress-loading {
	50% {
		left: 107%;
	}
}
@keyframes radiomark {
	0% {
		box-shadow: 0 0 0 12px hsl(var(--b1)) inset, 0 0 0 12px hsl(var(--b1)) inset;
	}
	50% {
		box-shadow: 0 0 0 3px hsl(var(--b1)) inset, 0 0 0 3px hsl(var(--b1)) inset;
	}
	to {
		box-shadow: 0 0 0 4px hsl(var(--b1)) inset, 0 0 0 4px hsl(var(--b1)) inset;
	}
}
.rating input {
	appearance: none;
	-webkit-appearance: none;
}
.rating .rating-hidden {
	background-color: transparent;
	width: 0.5rem;
}
.rating input:checked ~ input,
.rating input[aria-checked='true'] ~ input {
	--tw-bg-opacity: 0.2;
}
.rating input:focus-visible {
	transform: translateY(-0.125em);
	transition-duration: 0.3s;
	transition-property: transform;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.rating input:active:focus {
	animation: none;
	transform: translateY(-0.125em);
}
@keyframes rating-pop {
	0% {
		transform: translateY(-0.125em);
	}
	40% {
		transform: translateY(-0.125em);
	}
	to {
		transform: translateY(0);
	}
}
.select:focus {
	outline: 2px solid hsla(var(--bc) / 0.2);
	outline-offset: 2px;
}
.select-disabled,
.select[disabled] {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	--tw-text-opacity: 0.2;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
	cursor: not-allowed;
}
.select-disabled::placeholder,
.select[disabled]::placeholder {
	--tw-placeholder-opacity: 0.2;
	color: hsl(var(--bc) / var(--tw-placeholder-opacity));
}
.select-multiple,
.select[multiple],
.select[size].select:not([size='1']) {
	background-image: none;
	padding-right: 1rem;
}
[dir='rtl'] .select {
	background-position: 12px calc(1px + 50%), 16px calc(1px + 50%);
}
.steps .step:before {
	color: hsl(var(--bc) / var(--tw-text-opacity));
	content: '';
	height: 0.5rem;
	margin-left: -100%;
	top: 0;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	width: 100%;
}
.steps .step:after,
.steps .step:before {
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
	grid-column-start: 1;
	grid-row-start: 1;
}
.steps .step:after {
	border-radius: 9999px;
	color: hsl(var(--bc) / var(--tw-text-opacity));
	content: counter(step);
	counter-increment: step;
	display: grid;
	height: 2rem;
	place-items: center;
	place-self: center;
	position: relative;
	width: 2rem;
	z-index: 1;
}
.steps .step:first-child:before {
	content: none;
}
.steps .step[data-content]:after {
	content: attr(data-content);
}
.table :where(th, td) {
	padding: 1rem;
	vertical-align: middle;
	white-space: nowrap;
}
.table tr.active td,
.table tr.active th,
.table tr.active:nth-child(2n) td,
.table tr.active:nth-child(2n) th,
.table tr.hover:hover td,
.table tr.hover:hover th,
.table tr.hover:nth-child(2n):hover td,
.table tr.hover:nth-child(2n):hover th {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b3, var(--b2)) / var(--tw-bg-opacity));
}
.table:where(:not(.table-zebra))
	:where(thead, tbody, tfoot)
	:where(tr:not(:last-child) :where(th, td)) {
	--tw-border-opacity: 1;
	border-bottom-width: 1px;
	border-color: hsl(var(--b2, var(--b1)) / var(--tw-border-opacity));
}
.table :where(thead, tfoot) :where(th, td) {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	font-size: 0.75rem;
	font-weight: 700;
	line-height: 1rem;
	text-transform: uppercase;
}
.table :where(tbody th, tbody td) {
	--tw-bg-opacity: 1;
	background-color: hsl(var(--b1) / var(--tw-bg-opacity));
}
:where(.table :first-child) :where(:first-child) :where(th, td):first-child {
	border-top-left-radius: 0.5rem;
}
:where(.table :first-child) :where(:first-child) :where(th, td):last-child {
	border-top-right-radius: 0.5rem;
}
:where(.table :last-child) :where(:last-child) :where(th, td):first-child {
	border-bottom-left-radius: 0.5rem;
}
:where(.table :last-child) :where(:last-child) :where(th, td):last-child {
	border-bottom-right-radius: 0.5rem;
}
.toast > * {
	animation: toast-pop 0.25s ease-out;
}
@keyframes toast-pop {
	0% {
		opacity: 0;
		transform: scale(0.9);
	}
	to {
		opacity: 1;
		transform: scale(1);
	}
}
[dir='rtl'] .toggle {
	--handleoffsetcalculator: calc(var(--handleoffset) * 1);
}
.toggle:focus-visible {
	outline: 2px solid hsl(var(--bc));
	outline-offset: 2px;
}
.toggle:checked,
.toggle[aria-checked='true'],
.toggle[checked='true'] {
	--handleoffsetcalculator: var(--handleoffset);
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
}
[dir='rtl'] .toggle:checked,
[dir='rtl'] .toggle[aria-checked='true'],
[dir='rtl'] .toggle[checked='true'] {
	--handleoffsetcalculator: calc(var(--handleoffset) * -1);
}
.toggle:indeterminate {
	--tw-border-opacity: 1;
	--tw-bg-opacity: 1;
	box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
		calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset;
}
[dir='rtl'] .toggle:indeterminate {
	box-shadow: calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,
		calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,
		0 0 0 2px var(--tglbg) inset;
}
.toggle:disabled {
	--tw-border-opacity: 1;
	--togglehandleborder: 0 0 0 3px hsl(var(--bc)) inset,
		var(--handleoffsetcalculator) 0 0 3px hsl(var(--bc)) inset;
	background-color: transparent;
	border-color: hsl(var(--bc) / var(--tw-border-opacity));
	cursor: not-allowed;
	opacity: 0.3;
}
.rounded-btn {
	border-radius: var(--rounded-btn, 0.5rem);
}
.artboard.phone {
	width: 320px;
}
.indicator :where(.indicator-item) {
	--tw-translate-x: 50%;
	--tw-translate-y: -50%;
	bottom: auto;
	left: auto;
	right: 0;
	top: 0;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-start) {
	--tw-translate-x: -50%;
	left: 0;
	right: auto;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-center) {
	--tw-translate-x: -50%;
	left: 50%;
	right: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-end) {
	--tw-translate-x: 50%;
	left: auto;
	right: 0;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-bottom) {
	--tw-translate-y: 50%;
	bottom: 0;
	top: auto;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-middle) {
	--tw-translate-y: -50%;
	bottom: 50%;
	top: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.indicator :where(.indicator-item.indicator-top) {
	--tw-translate-y: -50%;
	bottom: auto;
	top: 0;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.input-md {
	font-size: 0.875rem;
	height: 3rem;
	line-height: 1.25rem;
	line-height: 2;
	padding-left: 1rem;
	padding-right: 1rem;
}
.steps-horizontal .step {
	display: grid;
	grid-template-columns: repeat(1, minmax(0, 1fr));
	grid-template-rows: repeat(2, minmax(0, 1fr));
	place-items: center;
	text-align: center;
}
.steps-vertical .step {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	grid-template-rows: repeat(1, minmax(0, 1fr));
}
:where(.toast) {
	--tw-translate-x: 0px;
	--tw-translate-y: 0px;
	bottom: 0;
	left: auto;
	right: 0;
	top: auto;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-start) {
	--tw-translate-x: 0px;
	left: 0;
	right: auto;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-center) {
	--tw-translate-x: -50%;
	left: 50%;
	right: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-end) {
	--tw-translate-x: 0px;
	left: auto;
	right: 0;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-bottom) {
	--tw-translate-y: 0px;
	bottom: 0;
	top: auto;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-middle) {
	--tw-translate-y: -50%;
	bottom: auto;
	top: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.toast:where(.toast-top) {
	--tw-translate-y: 0px;
	bottom: auto;
	top: 0;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.btn-group .btn:not(:first-child):not(:last-child) {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}
.btn-group .btn:first-child:not(:last-child) {
	border-bottom-left-radius: var(--rounded-btn, 0.5rem);
	border-bottom-right-radius: 0;
	border-top-left-radius: var(--rounded-btn, 0.5rem);
	border-top-right-radius: 0;
	margin-left: -1px;
	margin-top: 0;
}
.btn-group .btn:last-child:not(:first-child) {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: var(--rounded-btn, 0.5rem);
	border-top-left-radius: 0;
	border-top-right-radius: var(--rounded-btn, 0.5rem);
}
.btn-group-horizontal .btn:not(:first-child):not(:last-child) {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}
.btn-group-horizontal .btn:first-child:not(:last-child) {
	border-bottom-left-radius: var(--rounded-btn, 0.5rem);
	border-bottom-right-radius: 0;
	border-top-left-radius: var(--rounded-btn, 0.5rem);
	border-top-right-radius: 0;
	margin-left: -1px;
	margin-top: 0;
}
.btn-group-horizontal .btn:last-child:not(:first-child) {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: var(--rounded-btn, 0.5rem);
	border-top-left-radius: 0;
	border-top-right-radius: var(--rounded-btn, 0.5rem);
}
.btn-group-vertical .btn:first-child:not(:last-child) {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
	border-top-left-radius: var(--rounded-btn, 0.5rem);
	border-top-right-radius: var(--rounded-btn, 0.5rem);
	margin-left: 0;
	margin-top: -1px;
}
.btn-group-vertical .btn:last-child:not(:first-child) {
	border-bottom-left-radius: var(--rounded-btn, 0.5rem);
	border-bottom-right-radius: var(--rounded-btn, 0.5rem);
	border-top-left-radius: 0;
	border-top-right-radius: 0;
}
.modal-bottom :where(.modal-box) {
	--tw-translate-y: 2.5rem;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
	max-width: none;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	width: 100%;
}
.modal-middle :where(.modal-box) {
	--tw-translate-y: 0px;
	--tw-scale-x: 0.9;
	--tw-scale-y: 0.9;
	border-bottom-left-radius: var(--rounded-box, 1rem);
	border-bottom-right-radius: var(--rounded-box, 1rem);
	max-width: 32rem;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	width: 91.666667%;
}
.steps-horizontal .step {
	grid-template-columns: auto;
	grid-template-rows: 40px 1fr;
	min-width: 4rem;
}
.steps-horizontal .step:before {
	--tw-translate-y: 0px;
	--tw-translate-x: 0px;
	content: '';
	height: 0.5rem;
	margin-left: -100%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	width: 100%;
}
.steps-vertical .step {
	gap: 0.5rem;
	grid-template-columns: 40px 1fr;
	grid-template-rows: auto;
	justify-items: start;
	min-height: 4rem;
}
.steps-vertical .step:before {
	--tw-translate-y: -50%;
	--tw-translate-x: -50%;
	height: 100%;
	margin-left: 50%;
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	width: 0.5rem;
}
.visible {
	visibility: visible;
}
.static {
	position: static;
}
.fixed {
	position: fixed;
}
.absolute {
	position: absolute;
}
.relative {
	position: relative;
}
.-right-2 {
	right: -0.5rem;
}
.-top-2 {
	top: -0.5rem;
}
.bottom-0 {
	bottom: 0;
}
.right-0 {
	right: 0;
}
.top-0 {
	top: 0;
}
.top-\[66px\] {
	top: 66px;
}
.z-10 {
	z-index: 10;
}
.z-20 {
	z-index: 20;
}
.col-span-1 {
	grid-column: span 1 / span 1;
}
.col-span-2 {
	grid-column: span 2 / span 2;
}
.col-span-3 {
	grid-column: span 3 / span 3;
}
.col-span-4 {
	grid-column: span 4 / span 4;
}
.col-start-2 {
	grid-column-start: 2;
}
.m-0 {
	margin: 0;
}
.m-12 {
	margin: 3rem;
}
.m-2 {
	margin: 0.5rem;
}
.m-auto {
	margin: auto;
}
.mx-0 {
	margin-left: 0;
	margin-right: 0;
}
.mx-auto {
	margin-left: auto;
	margin-right: auto;
}
.my-2 {
	margin-bottom: 0.5rem;
	margin-top: 0.5rem;
}
.mb-4 {
	margin-bottom: 1rem;
}
.ml-\[126px\] {
	margin-left: 126px;
}
.mt-2 {
	margin-top: 0.5rem;
}
.inline-block {
	display: inline-block;
}
.inline {
	display: inline;
}
.flex {
	display: flex;
}
.inline-flex {
	display: inline-flex;
}
.table {
	display: table;
}
.grid {
	display: grid;
}
.hidden {
	display: none;
}
.h-0 {
	height: 0;
}
.h-1\/2 {
	height: 50%;
}
.h-10 {
	height: 2.5rem;
}
.h-3\/4 {
	height: 75%;
}
.h-32 {
	height: 8rem;
}
.h-6 {
	height: 1.5rem;
}
.h-\[100px\] {
	height: 100px;
}
.h-\[12px\] {
	height: 12px;
}
.h-\[200px\] {
	height: 200px;
}
.h-\[30px\] {
	height: 30px;
}
.h-\[44px\] {
	height: 44px;
}
.h-\[48px\] {
	height: 48px;
}
.h-\[50px\] {
	height: 50px;
}
.h-\[51px\] {
	height: 51px;
}
.h-\[54px\] {
	height: 54px;
}
.h-\[55px\] {
	height: 55px;
}
.h-\[66px\] {
	height: 66px;
}
.h-\[70px\] {
	height: 70px;
}
.h-fit {
	height: -webkit-fit-content;
	height: -moz-fit-content;
	height: fit-content;
}
.h-full {
	height: 100%;
}
.h-max {
	height: -webkit-max-content;
	height: max-content;
}
.h-min {
	height: -webkit-min-content;
	height: min-content;
}
.max-h-fit {
	max-height: -webkit-fit-content;
	max-height: -moz-fit-content;
	max-height: fit-content;
}
.min-h-\[188px\] {
	min-height: 188px;
}
.min-h-\[200px\] {
	min-height: 200px;
}
.min-h-\[49px\] {
	min-height: 49px;
}
.min-h-\[54px\] {
	min-height: 54px;
}
.min-h-\[64px\] {
	min-height: 64px;
}
.min-h-full {
	min-height: 100%;
}
.min-h-screen {
	min-height: 100vh;
}
.w-1\/2 {
	width: 50%;
}
.w-20 {
	width: 5rem;
}
.w-3\/4 {
	width: 75%;
}
.w-32 {
	width: 8rem;
}
.w-48 {
	width: 12rem;
}
.w-6 {
	width: 1.5rem;
}
.w-\[100px\] {
	width: 100px;
}
.w-\[112px\] {
	width: 112px;
}
.w-\[120px\] {
	width: 120px;
}
.w-\[12px\] {
	width: 12px;
}
.w-\[15px\] {
	width: 15px;
}
.w-\[200px\] {
	width: 200px;
}
.w-\[240px\] {
	width: 240px;
}
.w-\[60px\] {
	width: 60px;
}
.w-\[66px\] {
	width: 66px;
}
.w-\[80px\] {
	width: 80px;
}
.w-\[99px\] {
	width: 99px;
}
.w-fit {
	width: -webkit-fit-content;
	width: -moz-fit-content;
	width: fit-content;
}
.w-full {
	width: 100%;
}
.w-min {
	width: -webkit-min-content;
	width: min-content;
}
.w-screen {
	width: 100vw;
}
.min-w-\[111px\] {
	min-width: 111px;
}
.min-w-\[140px\] {
	min-width: 140px;
}
.min-w-\[144px\] {
	min-width: 144px;
}
.min-w-\[180px\] {
	min-width: 180px;
}
.min-w-\[50px\] {
	min-width: 50px;
}
.min-w-full {
	min-width: 100%;
}
.min-w-min {
	min-width: -webkit-min-content;
	min-width: min-content;
}
.max-w-\[300px\] {
	max-width: 300px;
}
.max-w-\[400px\] {
	max-width: 400px;
}
.max-w-\[50px\] {
	max-width: 50px;
}
.max-w-fit {
	max-width: -webkit-fit-content;
	max-width: -moz-fit-content;
	max-width: fit-content;
}
.flex-1 {
	flex: 1 1 0%;
}
.grow {
	flex-grow: 1;
}
.basis-5\/6 {
	flex-basis: 83.333333%;
}
.table-auto {
	table-layout: auto;
}
.transform {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y))
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.animate-\[bounce_1s_0\.15s_infinite\] {
	animation: bounce 1s 0.15s infinite;
}
.animate-\[bounce_1s_0\.3s_infinite\] {
	animation: bounce 1s 0.3s infinite;
}
@keyframes bounce {
	0%,
	to {
		animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
		transform: translateY(-25%);
	}
	50% {
		animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
		transform: none;
	}
}
.animate-bounce {
	animation: bounce 1s infinite;
}
.cursor-default {
	cursor: default;
}
.cursor-not-allowed {
	cursor: not-allowed;
}
.cursor-pointer {
	cursor: pointer;
}
.grid-cols-12 {
	grid-template-columns: repeat(12, minmax(0, 1fr));
}
.grid-cols-2 {
	grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-6 {
	grid-template-columns: repeat(6, minmax(0, 1fr));
}
.flex-row {
	flex-direction: row;
}
.flex-col {
	flex-direction: column;
}
.flex-nowrap {
	flex-wrap: nowrap;
}
.items-start {
	align-items: flex-start;
}
.items-center {
	align-items: center;
}
.items-stretch {
	align-items: stretch;
}
.justify-start {
	justify-content: flex-start;
}
.justify-end {
	justify-content: flex-end;
}
.justify-center {
	justify-content: center;
}
.justify-between {
	justify-content: space-between;
}
.justify-stretch {
	justify-content: stretch;
}
.gap-2 {
	gap: 0.5rem;
}
.gap-4 {
	gap: 1rem;
}
.gap-x-4 {
	column-gap: 1rem;
}
.gap-y-2 {
	row-gap: 0.5rem;
}
.space-x-0 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-left: calc(0px * (1 - var(--tw-space-x-reverse)));
	margin-right: calc(0px * var(--tw-space-x-reverse));
}
.space-x-1 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-left: calc(0.25rem * (1 - var(--tw-space-x-reverse)));
	margin-right: calc(0.25rem * var(--tw-space-x-reverse));
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-left: calc(0.5rem * (1 - var(--tw-space-x-reverse)));
	margin-right: calc(0.5rem * var(--tw-space-x-reverse));
}
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-left: calc(0.75rem * (1 - var(--tw-space-x-reverse)));
	margin-right: calc(0.75rem * var(--tw-space-x-reverse));
}
.space-x-4 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-left: calc(1rem * (1 - var(--tw-space-x-reverse)));
	margin-right: calc(1rem * var(--tw-space-x-reverse));
}
.space-y-0 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-bottom: calc(0px * var(--tw-space-y-reverse));
	margin-top: calc(0px * (1 - var(--tw-space-y-reverse)));
}
.space-y-1 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
	margin-top: calc(0.25rem * (1 - var(--tw-space-y-reverse)));
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
	margin-top: calc(0.5rem * (1 - var(--tw-space-y-reverse)));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-bottom: calc(1rem * var(--tw-space-y-reverse));
	margin-top: calc(1rem * (1 - var(--tw-space-y-reverse)));
}
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
	margin-top: calc(1.5rem * (1 - var(--tw-space-y-reverse)));
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-bottom: calc(2rem * var(--tw-space-y-reverse));
	margin-top: calc(2rem * (1 - var(--tw-space-y-reverse)));
}
.place-self-start {
	place-self: start;
}
.place-self-end {
	place-self: end;
}
.place-self-center {
	place-self: center;
}
.self-start {
	align-self: flex-start;
}
.self-center {
	align-self: center;
}
.justify-self-end {
	justify-self: end;
}
.overflow-hidden {
	overflow: hidden;
}
.overflow-scroll {
	overflow: scroll;
}
.whitespace-normal {
	white-space: normal;
}
.whitespace-nowrap {
	white-space: nowrap;
}
.whitespace-pre {
	white-space: pre;
}
.whitespace-pre-line {
	white-space: pre-line;
}
.\!rounded-full {
	border-radius: 9999px !important;
}
.\!rounded-none {
	border-radius: 0 !important;
}
.rounded {
	border-radius: 0.25rem;
}
.rounded-btn {
	border-radius: var(--rounded-btn);
}
.rounded-full {
	border-radius: 9999px;
}
.rounded-lg {
	border-radius: 0.5rem;
}
.rounded-none {
	border-radius: 0;
}
.border {
	border-width: 1.5px;
}
.border-2 {
	border-width: 2px;
}
.border-b {
	border-bottom-width: 1.5px;
}
.border-l-4 {
	border-left-width: 4px;
}
.border-none {
	border-style: none;
}
.border-accent {
	border-color: var(--accent);
}
.border-primary {
	border-color: var(--primary);
}
.border-transparent {
	border-color: transparent;
}
.bg-accent {
	background-color: var(--accent);
}
.bg-accent-soft {
	background-color: var(--accent-soft);
}
.bg-inverse {
	background-color: var(--inverse);
}
.bg-inverse-soft {
	background-color: var(--inverse-soft);
}
.bg-light {
	background-color: var(--light);
}
.bg-primary {
	background-color: var(--primary);
}
.bg-primary-light {
	background-color: var(--primary-light);
}
.bg-secondary {
	background-color: var(--secondary);
}
.bg-secondary-light {
	background-color: var(--secondary-light);
}
.bg-transparent {
	background-color: transparent;
}
.bg-gradient-to-b {
	background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}
.from-primary {
	--tw-gradient-from: var(--primary) var(--tw-gradient-from-position);
	--tw-gradient-to: hsla(0, 0%, 100%, 0) var(--tw-gradient-to-position);
	--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.to-secondary {
	--tw-gradient-to: var(--secondary) var(--tw-gradient-to-position);
}
.fill-light {
	fill: var(--light);
}
.stroke-current {
	stroke: currentColor;
}
.object-cover {
	object-fit: cover;
}
.p-0 {
	padding: 0;
}
.p-12 {
	padding: 3rem;
}
.p-16 {
	padding: 4rem;
}
.p-2 {
	padding: 0.5rem;
}
.p-4 {
	padding: 1rem;
}
.p-8 {
	padding: 2rem;
}
.\!py-0 {
	padding-bottom: 0 !important;
	padding-top: 0 !important;
}
.px-0 {
	padding-left: 0;
	padding-right: 0;
}
.px-1 {
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}
.px-10 {
	padding-left: 2.5rem;
	padding-right: 2.5rem;
}
.px-12 {
	padding-left: 3rem;
	padding-right: 3rem;
}
.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}
.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}
.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}
.px-8 {
	padding-left: 2rem;
	padding-right: 2rem;
}
.py-0 {
	padding-bottom: 0;
	padding-top: 0;
}
.py-2 {
	padding-bottom: 0.5rem;
	padding-top: 0.5rem;
}
.py-4 {
	padding-bottom: 1rem;
	padding-top: 1rem;
}
.py-6 {
	padding-bottom: 1.5rem;
	padding-top: 1.5rem;
}
.py-8 {
	padding-bottom: 2rem;
	padding-top: 2rem;
}
.\!pb-12 {
	padding-bottom: 3rem !important;
}
.\!pt-0 {
	padding-top: 0 !important;
}
.pb-0 {
	padding-bottom: 0;
}
.pb-2 {
	padding-bottom: 0.5rem;
}
.pb-24 {
	padding-bottom: 6rem;
}
.pb-4 {
	padding-bottom: 1rem;
}
.pb-6 {
	padding-bottom: 1.5rem;
}
.pb-8 {
	padding-bottom: 2rem;
}
.pl-2 {
	padding-left: 0.5rem;
}
.pl-4 {
	padding-left: 1rem;
}
.pr-1 {
	padding-right: 0.25rem;
}
.pr-2 {
	padding-right: 0.5rem;
}
.pr-8 {
	padding-right: 2rem;
}
.pt-0 {
	padding-top: 0;
}
.pt-0\.5 {
	padding-top: 0.125rem;
}
.pt-1 {
	padding-top: 0.25rem;
}
.pt-2 {
	padding-top: 0.5rem;
}
.pt-4 {
	padding-top: 1rem;
}
.text-left {
	text-align: left;
}
.text-center {
	text-align: center;
}
.text-justify {
	text-align: justify;
}
.text-2xl {
	font-size: 1.5rem;
	line-height: 2rem;
}
.text-3xl {
	font-size: 1.875rem;
	line-height: 2.25rem;
}
.text-4xl {
	font-size: 2.25rem;
	line-height: 2.5rem;
}
.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}
.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}
.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}
.font-bold {
	font-weight: var(--font-weight-bold);
}
.font-btn {
	font-weight: var(--font-weight-btn);
}
.font-display {
	font-weight: var(--font-weight-display);
}
.font-semibold {
	font-weight: var(--font-weight-semibold);
}
.tracking-wide {
	letter-spacing: 0.025em;
}
.text-accent {
	color: var(--accent);
}
.text-accent-soft {
	color: var(--accent-soft);
}
.text-dark {
	color: var(--dark);
}
.text-error {
	color: var(--error);
}
.text-inverse {
	color: var(--inverse);
}
.text-inverse-soft {
	color: var(--inverse-soft);
}
.text-light {
	color: var(--light);
}
.text-primary {
	color: var(--primary);
}
.text-secondary {
	color: var(--secondary);
}
.underline {
	text-decoration-line: underline;
}
.line-through {
	text-decoration-line: line-through;
}
.opacity-90 {
	opacity: 0.9;
}
.shadow {
	--tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
	--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
		0 1px 2px -1px var(--tw-shadow-color);
}
.shadow,
.shadow-inner {
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-inner {
	--tw-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
	--tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
}
.shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
		0 4px 6px -4px rgba(0, 0, 0, 0.1);
	--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
		0 4px 6px -4px var(--tw-shadow-color);
}
.shadow-lg,
.shadow-md {
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-md {
	--tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
		0 2px 4px -2px rgba(0, 0, 0, 0.1);
	--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),
		0 2px 4px -2px var(--tw-shadow-color);
}
.shadow-none {
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.outline-none {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.drop-shadow {
	--tw-drop-shadow: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1))
		drop-shadow(0 1px 1px rgba(0, 0, 0, 0.06));
}
.drop-shadow,
.filter {
	filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
		var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
		var(--tw-sepia) var(--tw-drop-shadow);
}
.transition {
	transition-duration: 0.15s;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		-webkit-backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter;
	transition-property: color, background-color, border-color,
		text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
		backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-in-out {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-out {
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}
@media (min-width: 768px) {
	.md\:\!rounded-btn {
		border-radius: var(--rounded-btn, 0.5rem) !important;
	}
}
.hover\:border:hover {
	border-width: 1.5px;
}
.hover\:border-primary:hover {
	border-color: var(--primary);
}
.hover\:bg-accent:hover {
	background-color: var(--accent);
}
.hover\:bg-accent-soft:hover {
	background-color: var(--accent-soft);
}
.hover\:bg-inverse:hover {
	background-color: var(--inverse);
}
.hover\:bg-primary-light:hover {
	background-color: var(--primary-light);
}
.hover\:bg-transparent:hover {
	background-color: transparent;
}
.hover\:underline:hover {
	text-decoration-line: underline;
}
.focus\:\!border-primary:focus {
	border-color: var(--primary) !important;
}
.focus\:bg-transparent:focus {
	background-color: transparent;
}
.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.focus\:\!outline-primary:focus {
	outline-color: var(--primary) !important;
}
.focus\:\!ring-primary:focus {
	--tw-ring-color: var(--primary) !important;
}
.active\:bg-accent:active {
	background-color: var(--accent);
}
.active\:bg-accent-soft:active {
	background-color: var(--accent-soft);
}
@media (min-width: 640px) {
	.sm\:visible {
		visibility: visible;
	}
	.sm\:col-span-1 {
		grid-column: span 1 / span 1;
	}
	.sm\:block {
		display: block;
	}
	.sm\:min-h-max {
		min-height: -webkit-max-content;
		min-height: max-content;
	}
	.sm\:w-\[120px\] {
		width: 120px;
	}
	.sm\:w-\[168px\] {
		width: 168px;
	}
	.sm\:w-\[600px\] {
		width: 600px;
	}
	.sm\:min-w-\[600px\] {
		min-width: 600px;
	}
	.sm\:grow {
		flex-grow: 1;
	}
	.sm\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-left: calc(0.5rem * (1 - var(--tw-space-x-reverse)));
		margin-right: calc(0.5rem * var(--tw-space-x-reverse));
	}
	.sm\:\!rounded-none {
		border-radius: 0 !important;
	}
	.sm\:px-2 {
		padding-left: 0.5rem;
		padding-right: 0.5rem;
	}
	.sm\:px-4 {
		padding-left: 1rem;
		padding-right: 1rem;
	}
	.sm\:px-5 {
		padding-left: 1.25rem;
		padding-right: 1.25rem;
	}
	.sm\:py-6 {
		padding-bottom: 1.5rem;
		padding-top: 1.5rem;
	}
}
@media (min-width: 768px) {
	.md\:col-span-1 {
		grid-column: span 1 / span 1;
	}
	.md\:block {
		display: block;
	}
	.md\:min-h-min {
		min-height: -webkit-min-content;
		min-height: min-content;
	}
	.md\:\!w-5\/6 {
		width: 83.333333% !important;
	}
	.md\:\!w-full {
		width: 100% !important;
	}
	.md\:w-2\/3 {
		width: 66.666667%;
	}
	.md\:w-\[120px\] {
		width: 120px;
	}
	.md\:w-auto {
		width: auto;
	}
	.md\:w-fit {
		width: -webkit-fit-content;
		width: -moz-fit-content;
		width: fit-content;
	}
	.md\:min-w-min {
		min-width: -webkit-min-content;
		min-width: min-content;
	}
	.md\:max-w-\[120px\] {
		max-width: 120px;
	}
	.md\:max-w-\[440px\] {
		max-width: 440px;
	}
	.md\:max-w-fit {
		max-width: -webkit-fit-content;
		max-width: -moz-fit-content;
		max-width: fit-content;
	}
	.md\:cursor-default {
		cursor: default;
	}
	.md\:grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}
	.md\:grid-cols-3 {
		grid-template-columns: repeat(3, minmax(0, 1fr));
	}
	.md\:flex-row {
		flex-direction: row;
	}
	.md\:space-x-2 > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-left: calc(0.5rem * (1 - var(--tw-space-x-reverse)));
		margin-right: calc(0.5rem * var(--tw-space-x-reverse));
	}
	.md\:space-x-4 > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-left: calc(1rem * (1 - var(--tw-space-x-reverse)));
		margin-right: calc(1rem * var(--tw-space-x-reverse));
	}
	.md\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
		--tw-space-x-reverse: 0;
		margin-left: calc(2rem * (1 - var(--tw-space-x-reverse)));
		margin-right: calc(2rem * var(--tw-space-x-reverse));
	}
	.md\:self-start {
		align-self: flex-start;
	}
	.md\:\!rounded {
		border-radius: 0.25rem !important;
	}
	.md\:\!rounded-btn {
		border-radius: var(--rounded-btn) !important;
	}
	.md\:rounded {
		border-radius: 0.25rem;
	}
	.md\:p-0 {
		padding: 0;
	}
	.md\:p-5 {
		padding: 1.25rem;
	}
	.md\:px-12 {
		padding-left: 3rem;
		padding-right: 3rem;
	}
	.md\:px-14 {
		padding-left: 3.5rem;
		padding-right: 3.5rem;
	}
	.md\:px-4 {
		padding-left: 1rem;
		padding-right: 1rem;
	}
	.md\:py-4 {
		padding-bottom: 1rem;
		padding-top: 1rem;
	}
	.md\:\!pt-12 {
		padding-top: 3rem !important;
	}
	.md\:pb-14 {
		padding-bottom: 3.5rem;
	}
	.md\:pl-1 {
		padding-left: 0.25rem;
	}
	.md\:pr-16 {
		padding-right: 4rem;
	}
	.md\:pt-12 {
		padding-top: 3rem;
	}
	.md\:pt-16 {
		padding-top: 4rem;
	}
	.md\:pt-4 {
		padding-top: 1rem;
	}
	.md\:pt-8 {
		padding-top: 2rem;
	}
	.md\:text-4xl {
		font-size: 2.25rem;
		line-height: 2.5rem;
	}
	.md\:hover\:bg-transparent:hover {
		background-color: transparent;
	}
}
@media (min-width: 1024px) {
	.lg\:right-0 {
		right: 0;
	}
	.lg\:col-span-2 {
		grid-column: span 2 / span 2;
	}
	.lg\:mx-auto {
		margin-left: auto;
		margin-right: auto;
	}
	.lg\:ml-2 {
		margin-left: 0.5rem;
	}
	.lg\:ml-\[188px\] {
		margin-left: 188px;
	}
	.lg\:flex {
		display: flex;
	}
	.lg\:\!hidden {
		display: none !important;
	}
	.lg\:hidden {
		display: none;
	}
	.lg\:h-fit {
		height: -webkit-fit-content;
		height: -moz-fit-content;
		height: fit-content;
	}
	.lg\:\!w-2\/3 {
		width: 66.666667% !important;
	}
	.lg\:\!w-full {
		width: 100% !important;
	}
	.lg\:w-\[188px\] {
		width: 188px;
	}
	.lg\:min-w-\[800px\] {
		min-width: 800px;
	}
	.lg\:flex-col {
		flex-direction: column;
	}
	.lg\:items-start {
		align-items: flex-start;
	}
	.lg\:justify-end {
		justify-content: flex-end;
	}
	.lg\:self-center {
		align-self: center;
	}
	.lg\:p-0 {
		padding: 0;
	}
	.lg\:px-12 {
		padding-left: 3rem;
		padding-right: 3rem;
	}
	.lg\:px-16 {
		padding-left: 4rem;
		padding-right: 4rem;
	}
	.lg\:px-32 {
		padding-left: 8rem;
		padding-right: 8rem;
	}
	.lg\:px-\[248px\] {
		padding-left: 248px;
		padding-right: 248px;
	}
	.lg\:shadow-md {
		--tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
			0 2px 4px -2px rgba(0, 0, 0, 0.1);
		--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),
			0 2px 4px -2px var(--tw-shadow-color);
	}
	.lg\:shadow-md,
	.lg\:shadow-none {
		box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
			var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	}
	.lg\:shadow-none {
		--tw-shadow: 0 0 #0000;
		--tw-shadow-colored: 0 0 #0000;
	}
}
@media (min-width: 1280px) {
	.xl\:relative {
		position: relative;
	}
	.xl\:col-span-1 {
		grid-column: span 1 / span 1;
	}
	.xl\:w-fit {
		width: -webkit-fit-content;
		width: -moz-fit-content;
		width: fit-content;
	}
	.xl\:max-w-\[408px\] {
		max-width: 408px;
	}
	.xl\:pl-0 {
		padding-left: 0;
	}
	.xl\:pr-16 {
		padding-right: 4rem;
	}
}
