---
# Build
.module_build:
  stage: build
  image: docker:23.0.5
  services:
    - docker:23.0.5-dind
  variables:
    DOCKER_DRIVER: overlay2
    MODULE: ''
    BUILD_TYPE: ''
    BUILD_CONTEXT: ''
    PORT: ''
    ROOTDIR: '.'
    TAG: $CI_COMMIT_SHA
  before_script:
    - apk --no-cache add make
    - apk --no-cache add git
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  script: |
    echo -e "\033[0;34m## Building module ${MODULE} ##\033[0m"

    # Check if module name was set
    if [ -n "${MODULE}" ]; then
      BUILD_TYPE="$(echo "${MODULE}" | sed "s|/.*||")"
      BUILD_CONTEXT="$(echo "${MODULE}" | sed "s|.*/||")"
      if [ -n "${BUILD_CONTEXT}" ]; then
        eval PORT="\$$(echo "${BUILD_CONTEXT}_PORT" | tr "[:lower:]" "[:upper:]")"
      else
        echo "[ERROR] Error building MODULE variables."
        exit 1
      fi
    fi

    # Build
    make docker-build

    # Push
    if [ -n "${TAG}" ]; then
      image_tag="${CI_REGISTRY_IMAGE}/${BUILD_CONTEXT}:${TAG}"
      docker tag "grasadmin/${BUILD_CONTEXT}:${TAG}" "${image_tag}"
      echo -e "\033[0;34m## Pushing ${image_tag} ##\033[0m"
      docker push "${image_tag}"
    fi

    # # Push MR tag
    # if [ -n "${CI_MERGE_REQUEST_IID}" ]; then
    #   mr_tag="${CI_REGISTRY_IMAGE}/${IMAGE}:mr_${CI_MERGE_REQUEST_IID}"
    #   docker tag "${variable_tag}" "${mr_tag}"
    #   echo -e "\033[0;34m## Pushing ${mr_tag} ##\033[0m"
    #   docker push "${mr_tag}"
    # fi

    # # Push COMMIT_TAG
    # if [ -n "${CI_COMMIT_TAG}" ]; then
    #   # Release/version Tag, strip the prefix "${IMAGE}-v"
    #   release_tag="${CI_REGISTRY_IMAGE}/${IMAGE}:$(echo "${CI_COMMIT_TAG}" | sed -e "s/^${IMAGE}-v//")"
    #   # Version
    #   docker tag "${variable_tag}" "${release_tag}"
    #   echo -e "\033[0;34m## Pushing ${release_tag} ##\033[0m"
    #   docker push "${release_tag}"
    #   # Latest
    #   latest_tag="${CI_REGISTRY_IMAGE}/${IMAGE}:latest"
    #   docker tag "${variable_tag}" "${latest_tag}"
    #   echo -e "\033[0;34m## Pushing ${latest_tag} ##\033[0m"
    #   docker push "${latest_tag}"
    # fi

# # Tag
# .module_tag_version:
#   stage: tag
#   image: node:16-alpine
#   variables:
#     MODULE: ""
#     ROOTDIR: "."
#   before_script:
#     - apk --no-cache add git
# - yarn # not needed due to caching??
#   script:
#     - cd "${ROOTDIR}/${MODULE}"
#     - npx semantic-release

# # Build with commit tag
# .module_publish:
#   stage: release
#   extends: .module_build
#   variables:
#     TAG: ${CI_COMMIT_TAG}
