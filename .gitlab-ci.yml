---
include:
    - .gitlab/ci/cache.gitlab-ci.yml
    - .gitlab/ci/module.gitlab-ci.yml

.modules:
    - MODULE:
          - app/shop
      # - app/dashboard
      # - app/checkout-widget
      # - server/main
      # - server/location
      # - server/payments
      # - server/image
      # - supertokens

stages:
    # - cache
    - build

# cache:
#   extends: .yarn-cache

build:
    extends: .module_build
    parallel:
        matrix: !reference [.modules]
    # rules:
    #   # MR
    #   - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #     changes:
    #       - node_modules
    #       - ${MODULE}/**/*
# publish:
#   extends: .module_publish
#   parallel:
#     matrix: !reference [.modules]

# ========================================
# optimize: create build rules for modules,
# such as each module job can run depending on changes of the module path, and the node_modules dependencies
# changes:
# - $MODULE_CHANGES_PATH
# - node_modules
# Consider: Almost any change in the monorepo will make a change to node_modules. Maybe a script is preferable to detemine changes, such as `yarn workspaces -R ${MODULE_NAME} --since HEAD/previousCOMMITSHA`.
# I'm not sure, brainstorming out loud.
# check this example for an idea: https://how-to.dev/how-to-set-up-monorepo-build-in-gitlab-ci

# TODO: Understand the parallel matrix: https://docs.gitlab.com/ee/ci/yaml/#parallelmatrix
# Run a one-dimensional matrix of parallel jobs:
# https://docs.gitlab.com/ee/ci/jobs/job_control.html#run-a-one-dimensional-matrix-of-parallel-jobs

# Run a matrix of parallel trigger jobs
# https://docs.gitlab.com/ee/ci/jobs/job_control.html#run-a-matrix-of-parallel-trigger-jobs

# Select different runner tags for each parallel matrix job
# https://docs.gitlab.com/ee/ci/jobs/job_control.html#select-different-runner-tags-for-each-parallel-matrix-job

# Here's a more declarative approach to dynamic module builds
# include:
# - ".test-ci.yml"
# - ".lint-ci.yml"
# - ".cache-ci.yml"
# - "shop/.gitlab-ci.yml"
# - "dashboard/.gitlab-ci.yml"
# - "delivery-widget/.gitlab-ci.yml"
# - "main/.gitlab-ci.yml"
# - "location/.gitlab-ci.yml"
# - "payments/.gitlab-ci.yml"
# - "image/.gitlab-ci.yml"
# # - "dispatch/.gitlab-ci.yml"

# .publish-rules:
#   stage: publish
#   rules:
#     # start jobs for when there are changes in the path defined
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#       changes:
#         - $CHANGES_PATH
#     - when: manual
#       allow_failure: true

# .shop:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "shop/**/*"

# .dashboard:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "dashboard/**/*"

# .main:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "main/**/*"

# .location:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "location/**/*"

# .image:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "image/**/*"

# .payments:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "payments/**/*"

# .dispatch:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "dispatch/**/*"

# .widget:
#   extends: .publish-rules
#   variables:
#     CHANGES_PATH: "widget/**/*"
