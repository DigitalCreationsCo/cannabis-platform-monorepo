stages:
  # - yarn-cache
  - build

# variables:
#   DOCKER_TLS_CERTDIR: "/certs"
#   DOCKER_DRIVER: overlay2

# adopt these good caching practices: https://docs.gitlab.com/ee/ci/caching/#good-caching-practices
# yarn-cache:
#   stage: yarn-cache
#   image: node:16
#   script:
#     - yarn --immutable
#   cache:
#     key:
#       files:
#         - yarn.lock
#     paths:
#       - .yarn/cache/
#       - node_modules/

publish-image:
  stage: build
  image: docker:23.0.5
  # services:
  #   - docker:23.0.5-dind
  before_script:
    - docker info
  script:
    - echo ${REGISTRY_PASSWORD}| docker login -u ${REGISTRY_USERNAME} --password-stdin
    - REGISTRY=${REGISTRY} TAG=${CI_COMMIT_SHA} / docker buildx bake --progress --push -f bake.hcl $BUILD
  parallel:
    matrix:
      - BUILD: [
          "shop",
          "dashboard",
          # "widget",
          "main",
          "location",
          "image",
          "payments",
          "supertokens",
        ]
        REGISTRY: ${REGISTRY}
  variables:
    REGISTRY_USERNAME: ${CI_DOCKER_REGISTRY_USERNAME}
    REGISTRY_PASSWORD: ${CI_DOCKER_REGISTRY_PASSWORD}
    REGISTRY: ${CI_DOCKER_REGISTRY}
    CI_COMMIT_SHA: ${CI_COMMIT_SHA}

# optimize: create build rules for modules,
# such as each module job can run depending on changes of the module path, and the node_modules dependencies
# changes: 
  # - $MODULE_CHANGES_PATH
  # - node_modules
# Consider: Almost any change in the monorepo will make a change to node_modules. Maybe a script is preferable to detemine changes, such as `yarn workspaces -R ${MODULE_NAME} --since HEAD/previousCOMMITSHA`.
# I'm not sure, brainstorming out loud.
# check this example for an idea: https://how-to.dev/how-to-set-up-monorepo-build-in-gitlab-ci

# TODO: Understand the parallel matrix: https://docs.gitlab.com/ee/ci/yaml/#parallelmatrix
# Run a one-dimensional matrix of parallel jobs: 
# https://docs.gitlab.com/ee/ci/jobs/job_control.html#run-a-one-dimensional-matrix-of-parallel-jobs

# Run a matrix of parallel trigger jobs
# https://docs.gitlab.com/ee/ci/jobs/job_control.html#run-a-matrix-of-parallel-trigger-jobs

# Select different runner tags for each parallel matrix job
# https://docs.gitlab.com/ee/ci/jobs/job_control.html#select-different-runner-tags-for-each-parallel-matrix-job
