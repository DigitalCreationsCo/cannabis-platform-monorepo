{"code":"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { debounce } from '../utils';\n// what data is needed from this hook module?\n// category list,\n// searchResult\n// search function\n// optimal data flow:\n// categories is fetched in useffect hook, empty dep\n// search is performed outside of use effect\nexport default function useCategory() {\n    const [categoryList, setCategoryList] = useState([]);\n    const [categorySearchResult, setSearchResult] = useState([]);\n    const [notFoundCategories, setNotFound] = useState(false);\n    useEffect(() => {\n        const getCategories = async () => {\n            try {\n                const { data } = await axios('/api/category');\n                if (data.categories?.length !== undefined) {\n                    setCategoryList(data.categories);\n                    setNotFound(false);\n                }\n            }\n            catch (error) {\n                setCategoryList([]);\n                setNotFound(true);\n                toast.error(error.response.data);\n            }\n        };\n        getCategories();\n    }, []);\n    // console.log('categoryList ', categoryList);\n    const doSearchCategories = debounce(async (e) => {\n        // if (categoryList.length === 0) {\n        //     try {\n        //         const { data } = await axios('/api/category');\n        //         if (data.categories?.length === 0) {\n        //             setSearchResult([]);\n        //             setNotFound(true);\n        //         } else {\n        //             setCategoryList(data.categories);\n        //             setNotFound(false);\n        //         }\n        //     } catch (error) {\n        //         setNotFound(true);\n        //         toast.error(error.response.data);\n        //     }\n        // }\n        const value = e?.target?.value.toLowerCase() || null;\n        // if (value) {\n        searchCategories(value);\n        // }\n    }, 200);\n    function searchCategories(value) {\n        if (value) {\n            setSearchResult(categoryList.filter((c) => c.name.toLowerCase().match(value)));\n        }\n        else {\n            setSearchResult(categoryList);\n        }\n    }\n    return { categoryList, categorySearchResult, notFoundCategories, doSearchCategories };\n}\n//# sourceMappingURL=useCategory.js.map","references":["/Users/vibrantceo/cannabis-platform-monorepo/packages/data-access/src/index.ts","/Users/vibrantceo/cannabis-platform-monorepo/.yarn/cache/axios-npm-1.2.1-4056ddcb4c-c4dc4e1190.zip/node_modules/axios/index.d.ts","/Users/vibrantceo/cannabis-platform-monorepo/.yarn/cache/@types-react-npm-18.0.34-e3e552cb5f-60d2766e76.zip/node_modules/@types/react/index.d.ts","/Users/vibrantceo/cannabis-platform-monorepo/.yarn/__virtual__/react-hot-toast-virtual-1b31246a35/0/cache/react-hot-toast-npm-2.4.0-df9434bc58-910214496d.zip/node_modules/react-hot-toast/dist/index.d.ts","/Users/vibrantceo/cannabis-platform-monorepo/packages/core-lib/src/utils/index.ts"],"map":"{\"version\":3,\"file\":\"useCategory.js\",\"sourceRoot\":\"\",\"sources\":[\"useCategory.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,KAAK,MAAM,iBAAiB,CAAC;AACpC,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAC;AAEpC,6CAA6C;AAC7C,iBAAiB;AACjB,eAAe;AACf,kBAAkB;AAClB,qBAAqB;AACrB,oDAAoD;AACpD,4CAA4C;AAE5C,MAAM,CAAC,OAAO,UAAU,WAAW;IAC/B,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAa,EAAE,CAAC,CAAC;IACjE,MAAM,CAAC,oBAAoB,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAa,EAAE,CAAC,CAAC;IACzE,MAAM,CAAC,kBAAkB,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAE1D,SAAS,CAAC,GAAG,EAAE;QACX,MAAM,aAAa,GAAG,KAAK,IAAI,EAAE;YAC7B,IAAI;gBACA,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC9C,IAAI,IAAI,CAAC,UAAU,EAAE,MAAM,KAAK,SAAS,EAAE;oBACvC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACjC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACtB;aACJ;YAAC,OAAO,KAAU,EAAE;gBACjB,eAAe,CAAC,EAAE,CAAC,CAAC;gBACpB,WAAW,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACpC;QACL,CAAC,CAAC;QAEF,aAAa,EAAE,CAAC;IACpB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,8CAA8C;IAE9C,MAAM,kBAAkB,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;QAC5C,mCAAmC;QACnC,YAAY;QACZ,yDAAyD;QACzD,+CAA+C;QAC/C,mCAAmC;QACnC,iCAAiC;QACjC,mBAAmB;QACnB,gDAAgD;QAChD,kCAAkC;QAClC,YAAY;QACZ,wBAAwB;QACxB,6BAA6B;QAC7B,4CAA4C;QAC5C,QAAQ;QACR,IAAI;QACJ,MAAM,KAAK,GAAG,CAAC,EAAE,MAAM,EAAE,KAAK,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC;QACrD,eAAe;QACf,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI;IACR,CAAC,EAAE,GAAG,CAAC,CAAC;IAER,SAAS,gBAAgB,CAAC,KAAa;QACnC,IAAI,KAAK,EAAE;YACP,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAClF;aAAM;YACH,eAAe,CAAC,YAAY,CAAC,CAAC;SACjC;IACL,CAAC;IAED,OAAO,EAAE,YAAY,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC;AAC1F,CAAC\"}","dts":{"name":"/Users/vibrantceo/cannabis-platform-monorepo/packages/core-lib/src/hooks/useCategory.d.ts","writeByteOrderMark":false,"text":"export default function useCategory(): {\n    categoryList: Category[];\n    categorySearchResult: Category[];\n    notFoundCategories: boolean;\n    doSearchCategories: (...args: any) => void;\n};\n"}}
