# Install environment
FROM node:16.16.0 as builder
# build folder
ARG BUILD_CONTEXT
ENV BUILD_CONTEXT=$BUILD_CONTEXT
WORKDIR /root
RUN yarn global add turbo
# copy root files
COPY . .
RUN turbo prune --scope=$BUILD_CONTEXT --docker

FROM node:16.16.0 as installer
ARG BUILD_CONTEXT
ENV BUILD_CONTEXT=$BUILD_CONTEXT
WORKDIR /root
# copy scoped package.json and yarn.lock
# install dependencies
COPY .gitignore .gitignore
COPY --from=builder /root/out/json/ .
COPY yarn.lock ./yarn.lock
RUN yarn install

# copy app source code and create build
COPY --from=builder /root/out/full/ .
COPY turbo.json turbo.json
RUN yarn turbo run build --filter=$BUILD_CONTEXT

# FROM node:16.16.0 as runner
# WORKDIR /root
# ARG BUILD_CONTEXT
# ENV BUILD_CONTEXT=$BUILD_CONTEXT
# # Don't run production as root
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
# USER nextjs

# COPY --from=installer /root/apps/$BUILD_CONTEXT/next.config.js .
# COPY --from=installer /root/apps/$BUILD_CONTEXT/package.json .

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=installer --chown=nextjs:nodejs /root/apps/$BUILD_CONTEXT/.next/standalone ./
# COPY --from=installer --chown=nextjs:nodejs /root/apps/$BUILD_CONTEXT/.next/static ./apps/$BUILD_CONTEXT/.next/static

CMD yarn start