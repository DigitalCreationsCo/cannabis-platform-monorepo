UI NOTE: abstract a component, ONLY when you need it more than twice! This saves time, headche, and technical debt.

TDD NOTE: 
Write down what components are breaking often, and why, Write effective unit tests for it!

12-9-22
prune tailwind, postcss, autoprefixer deps,
export tailwindcss from shared-config,
load tw classes in ui-lib, without install tw
load tw classes in app, without installing tw
12-10-22
auto build watch command for developing in dependency packages
app, require tailwind config from shared-config
12-12-22
add icons
12-16-22
app prisma config & lib
12-20-22
users page, add memberships to user rows
complete orders page
12-21-22
tailwind config improvements, fixed theme
12-23-22
supertokens signin with managed service
12-26-22
shop, get order routes,
12-26-22
seed sample deliveries, build demo application for clients, with working mobile apps. :)
12-31-22
write prisma lib tests to check types and return from prisma funcs :)
for typescript: fix tsconfig in any projec that is having compile issue
add daisy ui for tab, modal, and more.
1-12-22
refine the ui for mobile and web
add mobile sidenav drawer:
1-18-22
fix some stuff - idk what
1-20-22
fix modals in [id].tsx pages
1-21-22
root env
1-24-22
serve nextapp from linode with nginx
1-25-22
docker config to copy all monorepo files
1-27-22
docker configuration nextjs app, resolving image issues, and prisma client generation
1-29-22
switched ui-lib to rollup to resolve docker build issue, and improve ci experience
2-2-22
- ui-lib build with rollup, output css files
2-6-22
- error context component for handling down server, browser offline, and response errors,
    make use of React Error Boundary, as well as useQuery hook for components that fetch data
    for middleware, do some research, or refactor the healthcheck middleware into a built in axios function. :)
    Dont be afraid to create something messy. Clean it up later.
2-14-22
- get adress and delete address By Id work ok. updates user relation records.
2-16-22
    Fix Order > Address < User unlink the relation, so the record stays in the table.
2-17-22
    Dispensary Signup Form, 30% done
2-18-22
    Simplify component classes, signup api routes
...
2-27-22
Fix password hashing
create newSession override function - i didn't, i used express route for signup
create userSignup frontend page, api route, data function (with pw hashing), override supertokens
3-3-22
signup flow OK
get session flow OK
4-9-22
Continue building checkout widget
4-11-22
resolving build errors in all packages and apps:
shared-config: self build OK, dependency OK
data-access: self build OK, dependency OK
ui-lib: self build OK, dependency OK
shared-lib: self build OK, dependency OK
delivery-widget: self build OK, dependency OK
shop: self build OK, dependency OK
app: self build NO, dependency NO
4-14-22
Correct enefficiency with ui-lib build,use esbuild or webpack.
use tailwind jit compiler
correct postcss files for each package (ui-lib, apps)
Have tailwind output that can be used by all packges
4-19-22
resolved build errors,
using source imports for apps and node
build and watch scripts OK
4-23-22
stripe checkout api-path, WORK IN PROGRESS
clinet side form data: WORK IN PROGRESS:
notes: 
Form data is not persisted in state, I dont think.
Also, data is not accumulated from each formstep, only the recent form step data is saved.
Keep going!
Test the checkout flow. 
Test many edge cases according to the stripe docs.
5-5-2023
add cart cookie to bag state,
sign up and in from quick-delivery
add non-signed in bag state to user bag state
5-9-2023
handle new user checkout by prompt for sign in for signup
5-10-2023
[production/supertokens-passwordless e415d5501] passqwordless signon and signup mostly works, need to resolve some type erros, and handle the new user form flow, and write tests. And AUTH will be done!
5-12-2023
add location middleware to dispatch for location and set location on signin
add location provider
test users login and signup
5-13-2023
!! Create landing page with shop app in a new branch. 
5-14-2023
Dispensary signup forms 1/2 done
6-6-2023
raise cluster over gras domain
6-7-2023 
setup on kubernetes
shop route,
dummy admin route,
backend route featuring:
    server-main, server dispatch
6-23-2023
dashboard app CORS, shop app CORS

7-2-2023
TO DO:
Use self signed certificate for mtls in Linkerd,
use certificate from google ca for external traffic.
set up google tf provider, and the required cert and cert request resources
Test for success
PROFIT



TO DO:
Set up k8s healthchecks for all application pods
https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/

move applicable next api routes to dashboard app. 



CUSTOMER SUCCESS:
1. BUILD KNOWLEDGE PAGES!

2. FIGURE OUT A WAY TO HAVE A TWO STEP ONBOARDING PROCESS. NO MORE THAN TWO STEPS!
( SENDING ONE EMAIL DOES NOT COUNT AS A STEP ).

3.

TODO: Resolve logo image in delivery-widget

TODO: for Production (July, August)
Encrypt all external visible web code -
    - delivery widget
    - front end code entrypoints
    - server entry points
    - encrypt all server responses
    - lock all web end points behind a protective wall (jwt token, header authorization, encryption)


TODO:
Add testing for s3 buckets, to check for correct env vars, urls, valid buckets, etc.

Set up K8s load balancer for static external ip

Optimize docker images, SHOP especially, Lower binary size TO save costs at scale!! GREATLY IMPORTANT

FInish end to end tests
Stay vigilant! WORK HARD. Go to HACC campus. Go hard!
Optimize graphic images,

Separate stripe account Id from orgniazation record, to hide this data

BUGS: 
Resend OTP does not work.
Fix footer links with absolute paths
cart bug when navigating to different storefronts, the cart changes in unexpected ways

FORTIFY:
Add jtw tokens
encrypt redux state
put secrets in vault

DRIVERCLIENT TO DO:
Test dispatch in production
pod install,
submit to ios store
Test in production with dispatch
Write unit tests

PRODUCTION CHECKLIST:
Host the delivery widget executable.
Build a page, to intake drivers, (signup)
build a page with a cms, for platform knowledge, for dispensaries, and drivers.
host the driver app. ( where? )
ios -app store,
android, - online on cms website.
provision production mongo database
provision production prisma database branch
 - conditionally condition to dev or prod database, on node env variable

DATA REINFORCEMNET/SECURITY/HARDENING/&& BACKUPS!!!
save all organization data in a 6 hour backup, double backup.
save all user data in a 6 hour backup, double backup.
save all driver data in a 6 hour backup, double backup.
save all route data in a 6 hour backup, double backup.
save all address data in a 6 hour backup, double backup.

PRIVATE SECURITY SECURITY/ROTATION
Rotate crypto secret key
Rotate api signing keys (not used yet)

To DO: 
TO DO: add geosphere index, add schema for driverSessions collection, add process to bring driver online and offline, save a history of activity for drivers, implement the sql record for drivers, and keep winning. :) Also, get the driver app running on my iphone tomorrow. :D

Create a standard pattern for handling client side stylgin and a central tailwind config, that centers
around ui-lib, and watching for directories that are included in tailwindconfig sources.

Complete checkout and stripe data flow, end to end
NOTE: PROVIDE A TEXTFIELD FOR DISPENSARIES TO INPUT THEIR EXISTING STRIPE ACCOUNTS, during onboarding.

Complete 'continue sign up form' flow for users

fix middleware directs for domain zones

Write unit tests for all functions in cart.reducer, and reducer files,
move any functions to core-lib utils
write unit tests for all core-lib utils functions.
Write unit tests for product variant data functions,
Write unit tetst for order data functions.
Write unit test to check stripe webhook is live.

DO THESE THINGS THIS WEEK! BE DONE BY SATURDAY -- I DID NOT DO BY SATURDAY. I AM MAKING 4/10 LEVEL PROGRESS WITH VELOCITY

! HOW AM I GOING TO SEND THESE ORDERS TO THE DISPENSARY?
UNDERSTAND THEIR BACKEND SYSTEMS, AND INTEGRATE WITH GRAS FOR AUTOMATION FULFILLMENT.

fix continue signup flow for quick-delivery and mybag
complete signup process,

**Populate main production branch database mysql.
**Populate production mongo database.

** HANDLE A FORMDATA BUG IN DISPENSARY SIGNUP REVIEW.
HANDLE REDIRECT FOR DISPENSARY ADMINS, TO THE DASHBOARD APP.
GET THE DASHBOARD APP WORKING, POSSIBLY IN THE SAME DOMAIN. :P GET WHAT EXISTS TO WORK FIRST!!

TEST STRIPE Checkout - Add stripe functionality NOW - do it next. Keep it simple!

DOWNLOAD THE MOBILE client
FIX THE DISPATCH SERVER.

SETUP USER PROTECTED PAGES WITH SUPERTOKENS:

GET ALL THIS STUFF ONLINE WITH TERRAFORM.
USE AI LIKE A MOTHER FUCKER.
WIN.

Improvements:
save bag content to database, to recall it when the user sign in

Add global axios config for apps
Take all the notes an add them into JSDOCS in the relevant files and functions ;P

! Should encrypt the widget cart token, when its save in cookie. in the future.

* Handle change order address in checkout

Checkout, settings, support, admin pages,

add unit tests for all dispensary api, server api, location api routes, and functions!

Push it to linode so people can SEE OUR PRODUCT!
Create short youtube videos explaining 
1. How our network works
2. How our product works
3. How our software works
4. How to install our software.


Complete the regex match for cardreader, right now the match regex is turn offed,
card reader will always return true. Turn it on before we have paying customers!


must do: WRITE UNIT TESTS FOR WIDGET CRAWLER
Write unit tests for middleware redirects
Finish: resolve middleware redirect for /_stores/ path
ConfirmOrder:
    // NOTE: Should encrypt this token in the future.
    // NOTE: Add the cart data to redux store at this point, and delete the cookie after this.

Test the widget in a react app as well.
Host node servers.
Launch this month. Win.

IMPROVEMENTS:
add cookie to sign up forms to persist data, if the tab, or app is closed

*** Embed Calendly scheduling for dispensary onbarding! 

What must I do next? 3-4-2023
Lower the widget bundle size into modules.
signin flow
production environment testing: {
    upload the latest repo
    test with supertokens, mysql containers
    write a docker compose file (or whatever kubernetes uses)
    test in the cloud,
    create hte k8s config, so I can save money in between deployments. ;)
    Message Kalifa SATURDAY to have a call on Monday.
}


TO DO
CREATE PYTHON GEOCODE SERVER, SERVE WITH NGINX SCRIPT, OR DOCKER?
TEST THE LOCAL_ORGANIZATION ROUTE, SAVE THE COORDINATES IN BOTH DB, MYSQL AND MONGO
INITIALIZE BACKUPS IN mongodb
CONNECT WITH KALIPHA TO FACILIATE THE DOCKER COMPOSE JOB
KEEP GOING. BRIDGE THE GAPS NOW.
IM DOING A GOOD JOB.

check modal use hook
// TODO update session db record with new expiry
                                // TODO delete session db record
                                
1. Test db migrate with local shadow db
why ? to have a baseline and saved database schema for recovery
why? to have a one command deployment process for scalability that WORKS
2. test linode shadow db instance in prod environemnt.
why ? to run migrations locally and in production.
Do this tomorrow. First thing in the morning.

BUILD SHOPPING EXPERIENCE APP xD
why? because the customers need an app to buy

update UI components to show session status (Layout, topbar, pages, dont couple the state)
why? because people have to know if they are signed in, be able to signin

What am I doing now?
- testing docker with mysql image, for planetscale migrate with shadowdb
why? So I can push changes to my db
why? So I can promote up to date shema to production
why? So I can host a production environment
why? So Matthew and I can demo the software to a client in MD
why? So we can get paying customers
why? Because we are launching a profitable company

create server/main route for new organizations, and new users
why? so dispensaries and users can register

make sure duplicate records are not created
why? so every use has a unique username

add search function to dispensary create to find existing vendor brands,
why? so dispensaries can be tracked under their umbrella franchise

Write test cases for signup, signin, signout route
why? to test and make sure the server is always functioning properly

create password reset, and sendpwresettoken routes
why? because users need to reset their password, so customer service is not occupied with this

configure mailserver with linode
why? to send emails to users based on user actions (reset password, verify email) to automate
Test: Mailserver with linode stmp client

get the site working for client demos.
why? to host our site, so clients can see our product live, in action

setup nginx with https on linode
why? for hosting, security

Harden security in linode
Have Matthew review and give feedback
Profit :)

-host supertokens on linode with docker, use dockercompose, k8s for container deployments
-Deploy supertokens in linode container, add to env
why? to have scalable backend services
why? because there MAY be a bottleneck with requests to supertokens
there isnt now, though.
How can we know the bottleneck in the future?
(TEST RESPOND TO AND FROM BACKEND SERVICES,
MEASURE HTTP REQUEST LATENCY WITH SOME MEASURING PACKAGE, HTTP-(MEASURE???), LOGROCKET? FOR ALL REQUESTS)


product upload, wasabi s3 storage, imagekit.io image handling ;D
Why? Because we MUST verify customer age and identification, and conduct background check for drivers and customers, dispensary employess

Add country picker to address forms, add country code
Why? UX usability

configure nextapp and nginx with docker,
- use nodebalancer

Revise dockerfile to build fast and lean
https://dev.to/jonlauridsen/exploring-the-monorepo-5-perfect-docker-52aj

discount and pricing model:
discounts are applied on order basis, 
    applied from a product discount, if it exists,
    inherited to orderItem from product
    salePrice exist in db records: 
        OrderItem, is calculated from basePrice and discount

* build swagger api for node main server

Testing:
prisma query, 
Price, formatting, mutating data, adding, removing entries,
write nextjs api route tests, to test the proper http request is sent to server. :)
unit test debounce func
Write a unit test suite for addproductshandle
Write test for updateProducts page funcs
test the correct env is loaded (dev, or production)
provision development and prod, preprod spaces

add product details page, make it reusable for consumer app

finish all admin dashboard pages, details pages, etc.
Add socket event handling to admin app, for orders. :) Keep it simple and declarative! Easy! The admin client can receive events only, and does not send. 
complete site settings page with data, and routes

Fix the Order totals, and add backend code to update order rows for transactions
build consumer web app (Easy!!)

auth middleware with supertokens sessions from database :)

add incremental build to ui-lib lib
tie up loose ends in the dashboard - dead code, unfinished components
cycle reusable comps to ui-lib for using consumer app :)

* organization and product lookup needs to check the users membership org on the backend, for security ocnfirmation

Production fine details:
add static landing page that shows isolated from server activity, make it always available

Improve Dev Experience:
frontend: component generators, to automate file creation
, use less tailwind classes, and more components for frontend styling, { Grid, GridwithPadding, Grid gradient={}, etc}