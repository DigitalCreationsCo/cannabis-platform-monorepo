UI NOTE: abstract a component, ONLY when you need it more than twice! This saves time, headche, and technical debt.

TDD NOTE: 
Write down what components are breaking often, and why, Write effective unit tests for it!

12-9-22
prune tailwind, postcss, autoprefixer deps,
export tailwindcss from shared-config,
load tw classes in ui-lib, without install tw
load tw classes in app, without installing tw
12-10-22
auto build watch command for developing in dependency packages
app, require tailwind config from shared-config
12-12-22
add icons
12-16-22
app prisma config & lib
12-20-22
users page, add memberships to user rows
complete orders page
12-21-22
tailwind config improvements, fixed theme
12-23-22
supertokens signin with managed service
12-26-22
shop, get order routes,
12-26-22
seed sample deliveries, build demo application for clients, with working mobile apps. :)
12-31-22
write prisma lib tests to check types and return from prisma funcs :)
for typescript: fix tsconfig in any projec that is having compile issue
add daisy ui for tab, modal, and more.
1-12-22
refine the ui for mobile and web
add mobile sidenav drawer:
1-18-22
fix some stuff - idk what
1-20-22
fix modals in [id].tsx pages
1-21-22
root env
1-24-22
serve nextapp from linode with nginx
1-25-22
docker config to copy all monorepo files
1-27-22
docker configuration nextjs app, resolving image issues, and prisma client generation
1-29-22
switched ui-lib to rollup to resolve docker build issue, and improve ci experience
2-2-22
- ui-lib build with rollup, output css files
2-6-22
- error context component for handling down server, browser offline, and response errors,
    make use of React Error Boundary, as well as useQuery hook for components that fetch data
    for middleware, do some research, or refactor the healthcheck middleware into a built in axios function. :)
    Dont be afraid to create something messy. Clean it up later.
2-14-22
- get adress and delete address By Id work ok. updates user relation records.
2-16-22
    Fix Order > Address < User unlink the relation, so the record stays in the table.
2-17-22
    Dispensary Signup Form, 30% done
2-18-22
    Simplify component classes, signup api routes
...
2-27-22
Fix password hashing
create newSession override function - i didn't, i used express route for signup
create userSignup frontend page, api route, data function (with pw hashing), override supertokens
3-3-22
signup flow OK
get session flow OK
4-9-22
Continue building checkout widget
4-11-22
resolving build errors in all packages and apps:
shared-config: self build OK, dependency OK
data-access: self build OK, dependency OK
ui-lib: self build OK, dependency OK
shared-lib: self build OK, dependency OK
delivery-widget: self build OK, dependency OK
shop: self build OK, dependency OK
app: self build NO, dependency NO
4-14-22
Correct enefficiency with ui-lib build,use esbuild or webpack.
use tailwind jit compiler
correct postcss files for each package (ui-lib, apps)
Have tailwind output that can be used by all packges
4-19-22
resolved build errors,
using source imports for apps and node
build and watch scripts OK
4-23-22
stripe checkout api-path, WORK IN PROGRESS
clinet side form data: WORK IN PROGRESS:
notes: 
Form data is not persisted in state, I dont think.
Also, data is not accumulated from each formstep, only the recent form step data is saved.
Keep going!
Test the checkout flow. 
Test many edge cases according to the stripe docs.
5-5-2023
add cart cookie to bag state,
sign up and in from quick-delivery
add non-signed in bag state to user bag state
5-9-2023
handle new user checkout by prompt for sign in for signup
5-10-2023
[production/supertokens-passwordless e415d5501] passqwordless signon and signup mostly works, need to resolve some type erros, and handle the new user form flow, and write tests. And AUTH will be done!
5-12-2023
add location middleware to dispatch for location and set location on signin
add location provider
test users login and signup
5-13-2023
!! Create landing page with shop app in a new branch. 
5-14-2023
Dispensary signup forms 1/2 done
6-6-2023
raise cluster over gras domain
6-7-2023 
setup on kubernetes
shop route,
dummy admin route,
backend route featuring:
    server-main, server dispatch
6-23-2023
dashboard app CORS, shop app CORS
7-17-2023
Loginmodal mobile view fix,
seed production database
7-18-2023
resolved: OTP in production does not work for new user


TO DO:::          Priority: *** most, ** less, * least

EXTERNAL NETWORK LOAD BALANCER:
Configure to use all zonal NEGS. Read _dev_notes/kubernetes/backendXLBHTTPUseRegionNEGs.txt
Deploy permanents vm for failover.

END TO END TESTS
FInish end to end tests
Create test automation for end to end

DELIVERY WIDGET: 
Create docs for Delivery Widget, 
Lower the widget bundle size into modules.
    - widget carttoken cookie is encrypted at rest
Deploy encrypted delivery widget module ***
Resolve logo in delivery widget *
Have a testing site for Delivery Widget, hosted for demoing.

VERIFY ID:
Test verify Id,
add verify Id on each order in DRIVERCLIENT

BUGS: 
Resend OTP does not work. ***
Resolve subdomain links in the frontend apps. ***
cart bug when navigating to different storefronts, the cart changes in unexpected ways

CI:
Migrate to Gitlab CI free account

CUSTOMER SUCCESS:
1. BUILD KNOWLEDGE PAGES! *
2. BUILD EASY DISPENSARY SIGNUP! *
Create short videos: 
1. How our network works ***
2. How our product works ***
3. How our software works ***
4. How to install our software. ***

EMAIL:
configure smtp server to send emails based on user actions register, reset password

DISPENSARY ONBOARDING:
Embed Calendly scheduling for dispensary onbarding
add search function to dispensary create to find existing vendor brands,
why? so dispensaries can be tracked under their umbrella franchise

PRODUCTION HARDENING: (July, August)
Encrypt all external visible web code ***
    - delivery widget
    - front end code entrypoints
    - server entry points
    - encrypt all server responses
    - lock all web end points behind a protective wall (jwt token, header authorization, encryption) ***
    encrypt redux state
    env secrets in gitlab vault
    Ensure production database backups, 6 hour backup for both database.
    - Rotate secret keys, (crypto, jwt)

UNIT TESTS:
    CONFIGURE A TEST ENV FOR ALL MODULES
    OBJECT STORAGE TESTS
    Add testing for s3 buckets, *
    to check for correct env vars, urls, valid buckets, etc. *

    REDUX REDUCER UNIT TESTS
    STRIPE WEBHOOK UNIT TESTS
    WIDGET CRAWLER UNIT TESTS
    SIGNIN OTP UNIT TESTS
    SIGNOUT UNIT TESTS

FRONTEND: 
    add page transition animations: https://reacthustle.com/blog/next-js-page-transition-tailwind
    
DASHBOARD:
    add some real time functionality for orders table, notify Dispesary users with event, notification
    The admin client can receive events only, and does not send. 
    complete site settings page with data

DOCKER IMAGE:
Optimize docker images, SHOP especially, Lower binary size TO save costs at scale *

CHECKOUT:
Handle change order address in checkout **

IMAGE LOADING OPTIMIZING
Optimize graphic images,
use next/image component
imagekit.io ?

DISPATCH SERVER:
Test dispatch in production ***

DRIVER DELIVERY CLIENT:
cocoapod install
submit to ios store
Test in production with dispatch ***
Write unit tests
- Build a page, to intake drivers, (signup)

SUPPORT:
Add support chat with support pages ( FAQ, connect to team slack for live support )

UI:
Country picker for forms *

DOCS:
create swagger api docs for node servers

DISCOUNT AND PRICING: (dont worry about this now)
discounts are applied on order basis, 
    applied from a product discount, if it exists,
    inherited to orderItem from product
    salePrice exist in db records: 
        OrderItem, is calculated from basePrice and discount